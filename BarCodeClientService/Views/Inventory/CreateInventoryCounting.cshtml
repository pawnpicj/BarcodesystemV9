@{
    ViewData["Title"] = "InventoryCounting";
    DateTime dt = DateTime.Now;
    ViewData["Date"] = dt.ToShortDateString();
}

<link href="~/css/styles.css" rel="stylesheet" />
<link href="~/css/DataTable/jquery.dataTables.min.css" rel="stylesheet" />
<link href="~/css/DataTable/rowReorder.dataTables.min.css" rel="stylesheet" />
<link href="~/css/DataTable/button/buttons.dataTables.min.css" rel="stylesheet" />
@*<link href="~/css/DataTable/responsive.dataTables.min.css" rel="stylesheet" />*@

<script src="~/css/DataTable/jquery-3.3.1.js"></script>
@*<script src="~/css/DataTable/jquery-3.5.1.js"></script>*@
<script src="~/css/DataTable/jquery.dataTables.min.js"></script>
<script src="~/css/DataTable/dataTables.rowReorder.min.js"></script>
<script src="~/css/DataTable/moment.min.js"></script>
<script src="~/css/DataTable/datetime-moment.js"></script>
<script src="~/css/DataTable/dataTables.buttons.min.js"></script>
<script src="~/css/DataTable/dataTables.select.min.js"></script>
<script src="~/css/DataTable/dataTables.dateTime.min.js"></script>
<script src="~/css/DataTable/dataTables.editor.min.js"></script>
<script src="~/css/DataTable/button/buttons.html5.min.js"></script>
<script src="~/css/DataTable/button/jszip.min.js"></script>

@*<script src="~/js/pdfmake/pdfmake.min.js"></script>*@
@*<script src="~/js/pdfmake/vfs_fonts.js"></script>*@

@*<script src="~/css/DataTable/dataTables.responsive.min.js"></script>*@

@*<script src="https://cdn.datatables.net/buttons/1.6.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/select/1.3.1/js/dataTables.select.min.js"></script>*@

<style>
    tr.selected {
        background: red;
        color: red;
    }

    #main {
        position: absolute;
    }

    .color_tap {
        min-width: 60px;
        background-color: #5f95c3;
        color: #ffffff;
        font-weight: 600;
        margin-right: 1px;
    }

    .color_tap2 {
        min-width: 60px;
        background-color: #64a22f;
        color: #ffffff;
        font-weight: 600;
        margin-right: 1px;
    }

    .color_tap3 {
        min-width: 60px;
        background-color: #ffc024;
        color: #ffffff;
        font-weight: 600;
        margin-right: 1px;
    }

    .nav-tabs .nav-link {
        border-radius: 0px 12px 0px 0px;
        border: 1px solid rgb(193, 193, 193);
        height: 40px;
        line-height: 20px;
    }

    .modal {
        z-index: 200000;
    }

    .modal-header {
        background: #5f95c3;
        height: 40px;
        color: #ffffff;
    }

        .modal-header b {
            margin-top: -10px;
        }

    #TbAR table tr td {
        position: relative !important;
        padding: 0px !important;
        height: 35px;
        margin-left: 15px;
        margin-top: 10px;
        background-color: none;
    }

    table tbody tr td {
        background-color: #ffffff;
        color: black;
    }

    table tbody tr.selected td {
        background: #94d8e1;
        color: red;
    }

        table tbody tr.selected td .clsinput {
            background: #94d8e1;
            color: red;
        }

    .clsinput:focus {
        outline: none;
    }

    .BoxScan {
        display: none;
        border: 3px solid black;
        border-radius: 3px 3px;
    }

    input[aria-controls='TbBinLocation']:focus {
        background-color: khaki;
    }

    .textBorderBlack {
        width: 50px;
        text-align: center;
        font-weight: bolder;
        color: black;
        font-size:18px;
    }

    /* =================================================== */
    .cover-spin {
        position: fixed;
        width: 100%;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        background-color: rgba(255,255,255,0.7);
        z-index: 9999;
        display: none;
    }

    @@-webkit-keyframes spin {
        from {
            -webkit-transform: rotate(0deg);
        }

        to {
            -webkit-transform: rotate(360deg);
        }
    }

    @@keyframes spin {
        from {
            transform: rotate(0deg);
        }

        to {
            transform: rotate(360deg);
        }
    }

    .cover-spin::after {
        content: '';
        display: block;
        position: absolute;
        left: 48%;
        top: 40%;
        width: 40px;
        height: 40px;
        border-style: solid;
        border-color: black;
        border-top-color: transparent;
        border-width: 4px;
        border-radius: 50%;
        -webkit-animation: spin .8s linear infinite;
        animation: spin .8s linear infinite;
    }
    /* =================================================== */
</style>

<audio id="isPass">
    <source src="~/Sound/Pass.wav">
</audio>
<audio id="isNoPass">
    <source src="~/Sound/NoPass.wav">
</audio>

<script type="text/javascript">
    /*DocDate*/
    $(document).ready(function () {
        //===============================
        //$('#txtCountingDate').val(today);
        //$('#txtCountingTime').val(ctime);

        //Whs And BinLocation Fig
        //$('#txtWhsCode').val('05');
        //$('#txtWhsName').val('คลังเซล');
        //$('#txtBinCode').val('23494');
        //$('#txtBinName').val('05-1006-R110048');

    });

    function checkBarcodeUDOM() {
        document.getElementById("divBarcodeUDOM").style.display = "block";
        document.getElementById("divBarcodeProduct").style.display = "none";
        document.getElementById("txtScanBarCode01").focus();

        document.getElementById("rdoTypeItem1").checked = false;
        document.getElementById("rdoTypeItem2").checked = false;
        document.getElementById("txtQuantity02").disabled = true;
        document.getElementById("txtScanBarCode02").disabled = true;
        document.getElementById("txtScanBatchSerial02").disabled = true;
    }

    function checkBarcodeProduct() {
        document.getElementById("divBarcodeUDOM").style.display = "none";
        document.getElementById("divBarcodeProduct").style.display = "block";
        document.getElementById("txtScanBarCode02").focus();
    }

    function chTypeItem() {
        document.getElementById("txtQuantity02").disabled = false;
        document.getElementById("txtScanBarCode02").disabled = false;
        document.getElementById("txtScanBatchSerial02").disabled = false;
        document.getElementById("txtScanBarCode02").focus();
        document.getElementById("txtQuantity02").value = "1";
        document.getElementById("txtScanBarCode02").value = "";
        document.getElementById("txtScanBatchSerial02").value = "";
    }

    var isPass = document.getElementById("isPass");
    function playAudioPass() {
        isPass.play();
    }

    var isNoPass = document.getElementById("isNoPass");
    function playAudioNoPass() {
        isNoPass.play();
    }

</script>

<div id="frmLoading" class="cover-spin" style="display:none"></div>

<div id="#main">
    @* TimeLine *@
    <div class="row" style="margin-left:5px;margin-top:5px;color:#696969;">
        <h5 style="margin-top:5px;color:#696969;">
            <a asp-action="DashboardInventory" asp-controller="Dashboard" onclick="return confirm('Unsaved data will be lost. Do you want to continue without saving?')"><i class="fas fa-home"></i> Dashboard</a>
            <span>
                <a asp-action="ShowInventory" asp-controller="InventoryCounting" onclick="return confirm('Unsaved data will be lost. Do you want to continue without saving?')"><i class="fa fa-caret-right align-right"></i> Inventory Counting</a>
                <i class="fa fa-caret-right align-right"></i> Create InventoryCounting
            </span>
        </h5>
    </div>
    <hr />

    <div style="padding: 10px; color: #696969;">
        <ul class="nav nav-tabs Tap-PA" id="mytab" role="tablist">
            @*<li class="nav-item">
                    <a class="nav-link active color_tap" id="cus-tab" data-toggle="tab" href="#cus" role="tab" aria-controls="Customer" aria-selected="true">Customer</a>
                </li>*@
            <li class="nav-item">
                <a class="nav-link color_tap" id="item-tab" data-toggle="tab" href="#item" role="tab" aria-controls="Items" aria-selected="false">Add Data</a>
            </li>
            <li class="nav-item">
                <a class="nav-link color_tap2" id="item-tab2" data-toggle="tab" href="#item2" role="tab" aria-controls="Items" aria-selected="false">BinLocation Counted</a>
            </li>
            <li class="nav-item">
                <a class="nav-link color_tap3" id="item-tab3" data-toggle="tab" href="#item3" role="tab" aria-controls="Items" aria-selected="false">Setting</a>
            </li>
        </ul>
        <div class="tab-content" id="myTabContent">
            @* =============================================== *@
            <div class="tab-pane fade show active" id="item" role="tabpanel" aria-labelledby="item-tab" style="margin-top: 10px">
                <div class="row">
                    <div class="col-sm-6">
                        <div>
                            Series :
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <button class="input-group-text" id="Cifr"><i id="btnCheckSeries" class="fa fa-check"></i></button>
                                </div>
                                <input type="text" placeholder="" id="txtSeries" value="" autocomplete="off" disabled size="7">
                                <input type="text" class="form-control" placeholder="" id="txtSeriesName" value="" autocomplete="off" disabled>
                                @*<div class="input-group-append">
                                        <button class="input-group-text btnModelsItem" data-toggle="modal" data-target="#ModalSeries"><i class="fa fa-search"></i></button>
                                    </div>*@
                            </div>
                        </div>
                        <div>
                            Counting Date :
                            <div class="input-group">
                                <input type="date" class="form-control" id="txtCountingDate">
                            </div>
                        </div>
                        <div>
                            Counting Time :
                            <div class="input-group">
                                <input type="text" class="form-control" id="txtCountingTime">
                            </div>
                        </div>
                        <div style="display:none">
                            Ref2 :
                            <div class="input-group">
                                <input type="text" class="form-control" value="" id="ref2">
                            </div>
                        </div>

                        <div>
                            Remark :
                            <div class="input-group">
                                <input type="text" class="form-control" value="" id="comments">
                            </div>
                        </div>

                    </div>

                    <div class="col-sm-6">
                        <div>
                            Warehouse :
                            <div class="input-group">
                                <input type="text" autocomplete="off" disabled size="7" placeholder="" value="" id="txtWhsCode">
                                <input type="text" class="form-control" placeholder="" value="" id="txtWhsName" disabled>
                                <div class="input-group-append">
                                    <button class="input-group-text btnModalWarehouse" data-toggle="modal" data-target="#ModalWarehouse">
                                        <i class="fa fa-search"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div>
                            Bin Location :
                            <div class="input-group">
                                <input type="text" autocomplete="off" disabled size="7" placeholder="" value="" id="txtBinCode">
                                <input type="text" class="form-control" placeholder="" value="" id="txtBinName" disabled>
                                <div class="input-group-append">
                                    <button class="input-group-text btnModelsToBin" data-toggle="modal" data-target="#ModalBinLocation">
                                        <i class="fa fa-search"></i>
                                    </button>
                                </div>

                                <button class="btn btn-danger" data-toggle="modal" id="btnClrBinCode" onclick="ClearBinCode();">
                                    <i class="fa fa-times"></i>
                                </button>

                            </div>
                        </div>
                        <div class="input-group" style="padding-top: 10px;">
                            <button class="btn btn-danger col-sm-6" id="btnClear" style="width:100%" onclick="ClearTb();"><b>Clear</b></button>
                            <button class="btn btn-warning col-sm-6" id="btnSearch" style="width:100%" onclick="fncGetStockWhsBin();"><b>Search</b></button>
                        </div>
                            @*<button class="btn btn-success" id="btnNewItem" style="width:100%" data-toggle="modal" data-target="#ModalFormAddItem"><b>Add</b></button>*@
                            <br>
                            @* =================== TabScanBarCode =================== *@
                            <div id="TabScanBarCode" class="BoxScan">
                                @*<center>
                    <label>
                        <input type="radio" id="rdoTypeScan" name="typeScan" value="01" style="height: 15px; width: 15px; vertical-align: middle;" onclick="checkBarcodeUDOM()" />
                        <font size="3" style="font-weight:bold">Barcode UDOM</font>
                    </label>
                    &nbsp;&nbsp;&nbsp;
                    <label>
                        <input type="radio" id="rdoTypeScan" name="typeScan" value="02" style="height: 15px; width: 15px; vertical-align: middle; " onclick="checkBarcodeProduct()" />
                        <font size="3" style="font-weight:bold">Barcode Product</font>
                    </label>
                </center>*@

                                <div id="divBarcodeUDOM" style="display: block; ">
                                    <div id="TabQty" style="display:block;">
                                        Input Quantity :
                                        <div class="input-group">
                                            <button class="btn btn-warning" id="btnLowerQty" onclick="up('9999')"><i class="fas fa-plus"></i></button>
                                            <input type="number" class="form-control" placeholder="" id="txtQuantity01" value="1" style="background-color: antiquewhite; border: 3px solid #000000; margin: 0 auto; text-align: center; ">
                                            <button class="btn btn-warning" id="btnUpperQty" onclick="down('1')"><i class="fas fa-minus"></i></button>
                                            <button class="btn btn-warning" id="btnResetQty"><i class="fa fa-times"></i></button>
                                            <button class="btn btn-warning" id="btnUpdateQty" style="margin-left:5px; display:none" onclick="fncUpdateQty();">Update Qty</button>
                                        </div>
                                    </div>
                                    <div>
                                        Scan Barcode :
                                        <div class="input-group">
                                            <input type="text" class="form-control" value="" id="txtScanBarCode01" style="background-color: antiquewhite; border: 3px solid #000000; margin: 0 auto; text-align: center;" autocomplete="off">
                                            <button class="btn btn-primary" id="btnFocusText"><i class="fa fa-qrcode"></i></button>
                                        </div>
                                        <button class="input-group-text" id="addRow01" style="display: none;" autocomplete="off"><i class="fa fa-plus"></i></button>
                                    </div>
                                </div>

                                <div id="divBarcodeProduct" style="display:none; ">

                                    <center>
                                        <label>
                                            <input type="radio" id="rdoTypeItem1" name="typeItem" value="Batch" style="height: 12px; width: 12px; vertical-align: middle;" onclick="chTypeItem()" />
                                            <font size="3" style="font-weight:bold">Batch</font>
                                        </label>
                                        &nbsp;&nbsp;&nbsp;
                                        <label>
                                            <input type="radio" id="rdoTypeItem2" name="typeItem" value="Serial" style="height: 12px; width: 12px; vertical-align: middle; " onclick="chTypeItem()" />
                                            <font size="3" style="font-weight:bold">Serial</font>
                                        </label><br>
                                    </center>
                                    <label>
                                        Input Quantity :
                                    </label>
                                    <div class="input-group">
                                        <input type="number" class="form-control" placeholder="" id="txtQuantity02" value="1" style="background-color: antiquewhite; border: 3px solid #000000; margin: 0 auto; text-align: center;" autocomplete="off" disabled>
                                    </div>

                                    <label>
                                        Scan Barcode :
                                    </label>
                                    <div class="input-group">
                                        <input type="text" class="form-control" value="" id="txtScanBarCode02" style="background-color: antiquewhite; border: 3px solid #000000; margin: 0 auto; text-align: center;" autocomplete="off" disabled>
                                    </div>

                                    <label>
                                        Scan Batch/Serial :
                                    </label><div class="input-group">
                                        <input type="text" class="form-control" value="" id="txtScanBatchSerial02" style="background-color: antiquewhite; border: 3px solid #000000; margin: 0 auto; text-align: center;" autocomplete="off" disabled>
                                    </div>
                                    <button class="input-group-text" id="addRow02" style="display:none;"><i class="fa fa-plus"></i></button>
                                </div>

                            </div>
                            @* ================================================== *@

                        </div>

                    </div>

            </div>

            <div class="tab-pane fade show" id="item2" role="tabpanel" aria-labelledby="item-tab2" style="margin-top: 10px">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="col-sm-6">
                            Year :
                            <div class="input-group">
                                <select id='select-year'></select>
                            </div>
                            Warehouse :
                            <div class="input-group">
                                <input type="text" autocomplete="off" disabled size="7" placeholder="" value="" id="txtWhsCode_C">
                                <input type="text" class="form-control" placeholder="" value="" id="txtWhsName_C" disabled>
                                <div class="input-group-append">
                                    <button class="input-group-text btnModalWarehouse_C" data-toggle="modal" data-target="#ModalWarehouse_C">
                                        <i class="fa fa-search"></i>
                                    </button>
                                </div>
                                <br>
                                @*<button class="btn btn-warning" id="btnSearch" style="width:100%" onclick="fncGetBinCounted();"><b>Search</b></button>*@
                            </div>
                        </div>
                        <hr>
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="table-responsive">
                                    <table id="TbDataBinCounted" class="table table-striped table-bordered table-condensed dt-responsive nowrap text-xsmall" width="100%" cellspacing="0" style="background:#f0eff1;color:#696969;">
                                        <thead>
                                            <tr>
                                                <th>WhsCode</th>
                                                <th>WhsName</th>
                                                <th>BinLocation</th>
                                                <th>Status</th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>

                        @*<div class="col-sm-12">
                                <button class="btn btn-success" id="PrintBinC">Print Report</button>
                            </div>*@
                    </div>
                </div>
            </div>

            <div class="tab-pane fade show" id="item3" role="tabpanel" aria-labelledby="item-tab3" style="margin-top: 10px">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="col-sm-6">
                            <h4>Setting</h4>
                            <div>
                                Counting Date :
                                <div class="input-group">
                                    <input type="date" class="form-control" id="txtSetCountingDate">
                                </div>
                            </div>
                            <div>
                                Counting Time :
                                <div class="input-group">
                                    <input type="text" class="form-control" id="txtSetCountingTime">
                                </div>
                            </div>
                            <div>
                                Active :
                                <div class="input-group">
                                    <label><input type="radio" name="rdoActive" id="rdoActiveYes" value="Yes" />&nbsp;Yes</label>
                                    &nbsp;&nbsp;&nbsp;&nbsp;
                                    <label><input type="radio" name="rdoActive" id="rdoActiveNo" value="No" />&nbsp;No</label>
                                </div>
                            </div>
                            <p id="demo"></p>

                            @*<button type="button" id="btnUpdateSetup" class="btn btn-warning">Update</button>*@
                            <button onclick="return UpdateSetting()" class="btn btn-warning">Update</button>
                        </div>
                    </div>
                </div>
            </div>
            @* =============================================== *@
            <div class="row">
                <div class="col-sm-12" id="tbDataLine" style="display: none;">
                    <font size="+1"><b>List Data Line</b></font>
                    <div class="table-responsive">
                        <table id="TbLineStock" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0" style="background:#f0eff1;color:#696969;">
                            <thead>
                                <tr>
                                    <th>ItemCode</th>
                                    <th>ItemName</th>
                                    <th>WarehouseCode</th>
                                    <th>WarehouseName</th>
                                    <th>BinLocationCode</th>
                                    <th>BinLocationName</th>
                                    <th>Quantity</th>
                                    <th>UOMEntry</th>
                                    <th>UOMCode</th>
                                    <th>BatchYN</th>
                                    <th>SerialYN</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                    <hr>
                    <font size="+1"><b>List Data From Scan</b></font><br>
                    <div class="row">
                        <div class="col">
                            <button id="btnDelRow" class="btn btn-info">&nbsp;Delete Row&nbsp;</button>
                            <input type="text" class="bg-warning textBorderBlack" value="0" id="txtNoCounting" readonly />
                        </div>
                        <div class="col" align="right">
                            <button id="btnNewItem" class="btn btn-success" data-toggle="modal" data-target="#ModalFormAddItem">&nbsp;Add Item&nbsp;</button>
                        </div>
                    </div>

                    <table id="TbLineScan" class="table table-striped table-bordered table-condensed dt-responsive nowrap text-xsmall" style="width: 100%; background: #f0eff1; color: #696969;">
                        <thead>
                            <tr>
                                <th>ItemCode</th>
                                <th>ItemName</th>
                                <th>Quantity</th>
                                <th>Warehouse</th>
                                <th>BinEntry</th>
                                <th>BinLocation</th>
                                <th>UOMCode</th>
                                <th>ExpDate</th>
                                <th>BatchNumber</th>
                                <th>SerialNumber</th>
                                @*<th>TotalQty</th>*@
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>

        </div>
    </div>
    <div class="row" style="padding: 15px;margin-top:-20px;margin-bottom:-20px;">
        <div class="nav navbar-nav ml-auto">
            <div class="btn-group">
                <button class="btn btn-success" id="btnSave" style="margin-left: 5px; display: none;" onclick="POSTDataAPI()">Send To SAP</button>
            </div>
        </div>
    </div>

</div>


@*Create Models*@
@*1. Search Customer Code*@
<div class="modal fade" id="ModalCusCode">
    <div class="modal-dialog modal-xl">
        <div class="modal-content" style="background:#f0eff1;color:#696969;">
            <div class="modal-header">
                <b>List of Customer</b>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <div class="row">
                        <div class="col-sm-12">
                            <table id="TbCusCode" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0" style="background:#f0eff1;color:#696969;">
                                <thead>
                                    <tr>
                                        <th>Customer Code</th>
                                        <th>Cusetomer Name</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal" id="ChooseCus" style="background:#f0eff1;color:#696969;">Choose</button>
                <button class="btn btn-info" data-dismiss="modal" style="background:#f0eff1;color:#696969;">Close</button>
            </div>
        </div>
    </div>
</div>

@*2. Search Warehouse*@
<div class="modal fade" id="ModalWarehouse">
    <div class="modal-dialog modal-xl">
        <div class="modal-content" style="background:#f0eff1;color:#696969;">
            <div class="modal-header">
                <b>List of Warehouse</b>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <div class="row">
                        <div class="col-sm-12">
                            <table id="TbWhs" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0" style="background:#f0eff1;color:#696969;">
                                <thead>
                                    <tr>
                                        <th>WhsCode</th>
                                        <th>WhsName</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-success" data-dismiss="modal" id="ChooseWhs">Choose</button>
                <button class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@*3. Search Bin Location*@
<div class="modal fade" id="ModalBinLocation">
    <div class="modal-dialog modal-xl">
        <div class="modal-content" style="background:#f0eff1;color:#696969;">
            <div class="modal-header">
                <b>List of Bin Location</b>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <div class="row">
                        <div class="col-sm-12">
                            <table id="TbBinLocation" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0" style="background:#f0eff1;color:#696969;">
                                <thead>
                                    <tr>
                                        <th>BinCode</th>
                                        <th>BinName</th>
                                        <th>BinEntry</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-success" data-dismiss="modal" id="ChooseBinLocation">Choose</button>
                <button class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@*4. Search SaleEmployee*@
<div class="modal fade" id="ModalSaleEmployee">
    <div class="modal-dialog modal-xl">
        <div class="modal-content" style="background:#f0eff1;color:#696969;">
            <div class="modal-header">
                <b>List of Sale Employee</b>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <div class="row">
                        <div class="col-sm-12">
                            <table id="TbSaleEmployee" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0" style="background:#f0eff1;color:#696969;">
                                <thead>
                                    <tr>
                                        <th>SlpCode</th>
                                        <th>SlpName</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal" id="ChooseSlp" style="background:#f0eff1;color:#696969;">Choose</button>
                <button class="btn btn-info" data-dismiss="modal" style="background:#f0eff1;color:#696969;">Close</button>
            </div>
        </div>
    </div>
</div>

@*5. Search Series*@
<div class="modal fade" id="ModalSeries">
    <div class="modal-dialog modal-xl">
        <div class="modal-content" style="background:#f0eff1;color:#696969;">
            <div class="modal-header">
                <b>List of Series</b>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <div class="row">
                        <div class="col-sm-12">
                            <table id="TbSeries" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0" style="background:#f0eff1;color:#696969;">
                                <thead>
                                    <tr>
                                        <th>Series</th>
                                        <th>SeriesName</th>
                                        <th>YYYY-MM</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal" id="ChooseSeries">Choose</button>
                <button class="btn btn-danger" data-dismiss="modal" id="CloseSeries">Close</button>
            </div>
        </div>
    </div>
</div>

@*6. Search Warehouse Counted*@
<div class="modal fade" id="ModalWarehouse_C">
    <div class="modal-dialog modal-xl">
        <div class="modal-content" style="background:#f0eff1;color:#696969;">
            <div class="modal-header">
                <b>List of Warehouse</b>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <div class="row">
                        <div class="col-sm-12">
                            <table id="TbWhsC" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0" style="background:#f0eff1;color:#696969;">
                                <thead>
                                    <tr>
                                        <th>WhsCode</th>
                                        <th>WhsName</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal" id="ChooseWhsC">Choose</button>
                <button class="btn btn-danger" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@* Form Add Item ID=ModalFormAddItem *@
<div class="modal fade" id="ModalFormAddItem">
    <div class="modal-dialog modal-xl">
        <div class="modal-content" style="background:#f0eff1;color:#696969;">
            <div class="modal-header">
                <b>List of Item</b>
            </div>
            <div class="modal-body">
                <div id="tbListItem" class="table-responsive">
                    <div class="row">
                        <div class="col-sm-12">
                            <b>Select Item</b>
                            <div id="divhidden" style="display:none">
                                <input type="text" autocomplete="off" id="txtAWhsCode" disabled>
                                <input type="text" autocomplete="off" id="txtAWhsName" disabled>
                                <input type="text" autocomplete="off" id="txtABinEntry" disabled>
                                <input type="text" autocomplete="off" id="txtABinCode" disabled>
                                <input type="text" autocomplete="off" id="txtGetItemsYN" disabled>
                            </div>

                            <table id="TbItems" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0" style="background:#f0eff1;color:#696969;">
                                <thead>
                                    <tr>
                                        <th>ItemCode</th>
                                        <th>ItemName</th>
                                        <th>UOM</th>
                                        <th>BatchYN</th>
                                        <th>SerialYN</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>

                </div>

                <div class="row">
                    <div class="col-sm-12">
                        <b style="color:goldenrod">Selected Item : </b><br>
                        <b>ItemCode : </b>
                        <div class="input-group">
                            <input type="text" autocomplete="off" placeholder="" id="txtItemCodeSelected" class="form-control" disabled>
                        </div>

                        <b>ItemName : </b>
                        <div class="input-group">
                            <input type="text" autocomplete="off" placeholder="" id="txtItemNameSelected" class="form-control" disabled>
                        </div>

                        Input Quantity :
                        <div class="input-group">
                            <input type="number" class="form-control" placeholder="" id="txtQuantitySelected" value="1">
                        </div>

                        <b>BarCode/QRCode : </b>
                        <div class="input-group">
                            <input type="text" autocomplete="off" placeholder="" id="txtbatchserialno" class="form-control">
                        </div>

                        <div class="input-group">
                            UOM : <input type="text" autocomplete="off" placeholder="" id="txtUomSelected" size="7" disabled>
                            &nbsp;
                            BatchYN : <input type="text" autocomplete="off" placeholder="" id="txtBatchYNSelected" size="7" disabled>
                            &nbsp;
                            SerialYN : <input type="text" autocomplete="off" placeholder="" id="txtSerialYNSelected" size="7" disabled>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal" id="btnAddItem">Add</button>
                <button class="btn btn-danger" data-dismiss="modal" style="" id="btnCLoseItem">Close</button>
            </div>
        </div>
    </div>
</div>


<script src="~/js/Array.js"></script>
<script src="~/js/ConfigX.js"></script>
<script type="text/javascript">
    document.getElementById("frmLoading").style.display = "block";
    function ClearBinCode() {
        document.getElementById("txtBinCode").value = '';
        document.getElementById("txtBinName").value = '';
    }

    var oXHR = new XMLHttpRequest();
    console.log(oXHR);
    oXHR.onreadystatechange = reportStatus;
    //oXHR.open("GET", "../../js/setup-inc.json", true);  // get json file.
    oXHR.open("GET", fjs, true);  // get json file.
    oXHR.send();

    function reportStatus() {
        if (oXHR.readyState == 4) {		// Check if request is complete.
            //document.getElementById('demo').innerHTML = this.responseText;
            createTableFromJSON(this.responseText);
        }
    }
    //XXX
    function createTableFromJSON(jsonData) {
        var data1 = [];
        data1 = JSON.parse(jsonData);
        //console.log(data1);
        //console.log(data1.type);
        if (data1.type = "inc") {
            //var getDateC = data1.dateCounting;
            var getDate = new Date(data1.dateCounting);
            var cDay = ("0" + getDate.getDate()).slice(-2);
            var cMonth = ("0" + (getDate.getMonth() + 1)).slice(-2);
            var cYear = getDate.getFullYear();
            var fulldate = cYear + "-" + cMonth + "-" + cDay;

            //console.log(fulldate);
            $('#txtSetCountingDate').val(fulldate);
            $('#txtSetCountingTime').val(data1.timeCounting);
            if (data1.active == 'Yes') {
                document.getElementById('rdoActiveYes').checked = true;
                document.getElementById('rdoActiveNo').checked = false;
            } else if (data1.active == 'No') {
                document.getElementById('rdoActiveYes').checked = false;
                document.getElementById('rdoActiveNo').checked = true;
            }


            //Start DateTimeCurrent
            var now = new Date();
            var day = ("0" + now.getDate()).slice(-2);
            var month = ("0" + (now.getMonth() + 1)).slice(-2);
            var today = now.getFullYear() + "-" + (month) + "-" + (day);
            //var minutes = now.getMinutes();
            //var hour = now.getHours();

            var hour = ("0" + now.getHours()).slice(-2);
            var minutes = ("0" + now.getMinutes()).slice(-2);
            var ctime = hour + ":" + minutes;
            //==================================

            if (data1.active == 'Yes') {
                $('#txtCountingDate').val(fulldate);
                $('#txtCountingTime').val(data1.timeCounting);
            }
            else if (data1.active == 'No') {
                $('#txtCountingDate').val(today);
                $('#txtCountingTime').val(ctime);
            }

        }
    }

    //Update Setting
    function UpdateSetting() {
        // Form fields, see IDs above
        var inactive;
        if (document.getElementById('rdoActiveYes').checked) {
            inactive = "Yes";
        } else if (document.getElementById('rdoActiveNo').checked) {
            inactive = "No";
        }

        const params = {
            type: 'inc',
            desc: 'Inventory Counting',
            dateCounting: document.querySelector('#txtSetCountingDate').value,
            timeCounting: document.querySelector('#txtSetCountingTime').value,
            active: inactive
        }

        $.ajax({
            type: "POST",
            url: '@Url.Action("PostSetting", "Setting")',
            data: { setupTypeModel: params },
            dataType: "JSON",
            success: function (ex) {
                alert('Setting Updated.');
                location.reload();
            }
        });
    }

    //+++++ Series Code +++++
    $.ajax({
        type: "GET",
        url: "@Url.Action("GetSeriesCode", "Inventory")",
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        dataSrc: 'data',
        success: function (data) {
            jqueryXml = $(data);
            //console.log(jqueryXml);
            console.log("GET Series Complete.");
            $('#txtSeries').val(jqueryXml[0].data[0].series);
            $('#txtSeriesName').val(jqueryXml[0].data[0].seriesName);
            //style = "color:green",btnCheckSeries,style="background-color:red
            document.getElementById("Cifr").style.backgroundColor = "green";
            document.getElementById("btnCheckSeries").style.color = "#FFFFFF";
            document.getElementById("frmLoading").style.display = "none";
        },
        error: function (err) {
            document.getElementById("frmLoading").style.display = "none";
        }
    });

    // Get SaleEmployee
    //var tableSlp = $('#TbSaleEmployee').DataTable({});

    //+++++ Get Warehouse +++++
    var tableWhs = $('#TbWhs').DataTable({
        "ajax": {
            "url": '@Url.Action("GetWarehouse", "Home")',
            "type": "GET",
            "dataType": "JSON",
            "dataSrc": 'data',
            "complete": function (data) {
                console.log("GET Warehouse Complete.");
            }
        },
        "columns": [
            { "data": "whsCode" },
            { "data": "whsName" },
        ],
        "paging": true,
        "pageLength": 10,
        "ordering": false,
        "info": false,
        "select": true
    });

    tableWhs.on('select', function () {
        var cellCode = tableWhs.rows({ selected: true }).data()[0]['whsCode'];
        var cellName = tableWhs.rows({ selected: true }).data()[0]['whsName'];

        $('#ChooseWhs').click(function () {
            var xCode = document.getElementById("txtWhsCode");
            var xName = document.getElementById("txtWhsName");
            xCode.value = cellCode;
            xName.value = cellName;
        });

        //$('#ChooseWhsC').click(function () {
        //    var xCode = document.getElementById("txtWhsCode_C");
        //    var xName = document.getElementById("txtWhsName_C");
        //    xCode.value = cellCode;
        //    xName.value = cellName;
        //});

    });

    //+++++ Get Warehouse for Counting +++++
    var BCData = [];
    var tableWhsC = $('#TbWhsC').DataTable({
        "ajax": {
            "url": '@Url.Action("GetWarehouse", "Home")',
            "type": "GET",
            "dataType": "JSON",
            "dataSrc": 'data',
            "complete": function (data) {
                console.log("GET Warehouse Complete.");
            }
        },
        "columns": [
            { "data": "whsCode" },
            { "data": "whsName" },
        ],
        "paging": true,
        "pageLength": 10,
        "ordering": false,
        "info": false,
        "select": true
    });

    tableWhsC.on('select', function () {
        var cellCode = tableWhsC.rows({ selected: true }).data()[0]['whsCode'];
        var cellName = tableWhsC.rows({ selected: true }).data()[0]['whsName'];

        $('#ChooseWhsC').click(function () {
            var xCode = document.getElementById("txtWhsCode_C");
            var xName = document.getElementById("txtWhsName_C");
            xCode.value = cellCode;
            xName.value = cellName;

            var selectYear = document.getElementById('select-year');
            var valueYear = selectYear.options[selectYear.selectedIndex].value;

            if (xCode.value != '') {
                $("#ModalWarehouse_C").modal({ backdrop: "static" });
                $.ajax({
                    url: '@Url.Action("GetBinLocationCounting", "Inventory")',
                    data: { whscode: xCode.value, iyear: valueYear },
                    type: "GET",
                    dataType: "JSON",
                    success: function (data) {
                        console.log(data);
                        BCData = [];
                        BCData = data.data;
                        tbDataBinCounted.clear();
                        tbDataBinCounted.rows.add(BCData);
                        tbDataBinCounted.draw();
                    }
                });

        }

        });

    });

    //Start Table [TbDataLine]
    $('#TbDataBinCounted').DataTable({
        dom: "Bfrltip",
        bLengthChange: false,
        binfo: false,
        data: BCData,
        language: {
            emptyTable: "<b>Empty Table</b>"
        },
        columns: [
            { data: "whsCode" },
            { data: "whsName" },
            { data: "binCode" },
            { data: "c_BinCode" }
        ],
        buttons: [
            { // กำหนดพิเศษเฉพาะปุ่ม pdf
                "extend": 'pdf', // ปุ่มสร้าง pdf ไฟล์
                "text": 'PDF', // ข้อความที่แสดง
                "pageSize": 'A4',   // ขนาดหน้ากระดาษเป็น A4
                "customize": function (doc) { // ส่วนกำหนดเพิ่มเติม ส่วนนี้จะใช้จัดการกับ pdfmake
                    // กำหนด style หลัก
                    doc.defaultStyle = {
                        font: 'Tahoma',
                        fontSize: 16
                    };
                    // กำหนดความกว้างของ header แต่ละคอลัมน์หัวข้อ
                    doc.content[1].table.widths = [125, 125, 125, 125];
                    doc.styles.tableHeader.fontSize = 16; // กำหนดขนาด font ของ header
                    var rowCount = doc.content[1].table.body.length; // หาจำนวนแะวทั้งหมดในตาราง
                    // วนลูปเพื่อกำหนดค่าแต่ละคอลัมน์ เช่นการจัดตำแหน่ง
                    for (i = 1; i < rowCount; i++) { // i เริ่มที่ 1 เพราะ i แรกเป็นแถวของหัวข้อ
                        doc.content[1].table.body[i][0].alignment = 'center'; // คอลัมน์แรกเริ่มที่ 0
                        doc.content[1].table.body[i][1].alignment = 'center';
                        doc.content[1].table.body[i][2].alignment = 'center';
                        doc.content[1].table.body[i][3].alignment = 'center';
                    };
                    console.log(doc); // เอาไว้ debug ดู doc object proptery เพื่ออ้างอิงเพิ่มเติม
                }
            }, // สิ้นสุดกำหนดพิเศษปุ่ม pdf
            'print', 'pageLength'
        ],
        autoWidth: true,
        pageLength: 25,
        select: false,
        paging: true,
        ordering: false,
        info: false,
        searching: true
    });

    var tbDataBinCounted = $('#TbDataBinCounted').DataTable();

    //+++++ GetToBinLocation +++++
    var LBins = [];

    $('#TbBinLocation').DataTable({
        bLengthChange: false,
        binfo: false,
        data: LBins,
        language: {
            emptyTable: "Loading ..."
        },
        columns: [
            { data: "binCode", autoWidth: true },
            { data: "whsCode", autoWidth: true },
            { data: "absEntry", autoWidth: true }
        ],
        pageLength: 10,
        select: true,
        paging: true,
        ordering: false,
        info: false
    });

    var tbBin = $('#TbBinLocation').DataTable();

    $(".btnModelsToBin").click(function () {
        if ($('#txtWhsCode').val() != '') {
            $("#ModalBinLocation").modal({ backdrop: "static" });
                $.ajax({
                    url: '@Url.Action("GetBinLocationWhs", "Inventory")',
                    data: { whscode: $('#txtWhsCode').val() },
                    type: "GET",
                    dataType: "JSON",
                    success: function (data) {
                        //console.log(data);
                        LBins = []
                        LBins = data.data
                        tbBin.clear();
                        tbBin.rows.add(LBins);
                        tbBin.draw();

                        $("input[aria-controls='TbBinLocation']").focus();
                    }
                });
            } else {
                alert('To Warehouse Empty!');
                return false;
            }

        });

    //Form Add Item New
    var LItems = [];
    var TbItems = $('#TbItems').DataTable({
        bLengthChange: false,
        binfo: false,
        data: LItems,
        language: {
            emptyTable: "Loading ..."
        },
        columns: [
            { data: "itemCode", autoWidth: true },
            { data: "itemName", autoWidth: true },
            { data: "uom", autoWidth: true },
            { data: "batchYN", autoWidth: true },
            { data: "serialYN", autoWidth: true }
        ],
        pageLength: 5,
        select: true,
        paging: true,
        ordering: false,
        info: false
    });

    $('#TbItems tbody').on('click', 'tr', function () {
        if ($(this).hasClass('selected')) {
            $(this).removeClass('selected');
        } else {
            TbItems.$('tr.selected').removeClass('selected');
            $(this).addClass('selected');
        }
    });

    var tbline1 = [];
    var tbline2 = [];

    $('#btnNewItem').click(function () {
        //TbItems
        //alert('Openning Form');
        LItems = [];
        tbline1 = [];
        tbline2 = [];
        console.log('Cleared');
        if ($('#txtItemCodeSelected').val() != '') {
            $('#txtItemCodeSelected').val('');
            $('#txtItemNameSelected').val('');
            $('#txtQuantitySelected').val('1');
            $('#txtbatchserialno').val('');
            $('#txtUomSelected').val('');
            $('#txtBatchYNSelected').val('');
            $('#txtSerialYNSelected').val('');
        }

        console.log('Items Master Loading..');
        var whsCode = document.getElementById("txtWhsCode").value;
        var whsName = document.getElementById("txtWhsName").value;
        var binCode = document.getElementById("txtBinCode").value;
        var binEntry = document.getElementById("txtBinName").value;

        $('#txtAWhsCode').val(whsCode);
        $('#txtAWhsName').val(whsName);
        $('#txtABinEntry').val(binCode);
        $('#txtABinCode').val(binEntry);

        //$("#ModalFormAddItem").modal({ backdrop: "static" });
        if ($('#txtGetItemsYN').val() == 'Y') {
            console.log('Get Items Complete');
            TbItems.rows('.selected').nodes().to$().removeClass('selected');
            //LItems = [];
            //LItems = itm.data;
            //TbItems.clear();
        }
        else {
            $.ajax({
                url: '@Url.Action("GetListItemMaster", "Inventory")',
                type: "GET",
                dataType: "JSON",
                success: function (itm) {
                    console.log('Items Master Complete..');
                    console.log(itm);
                    LItems = [];
                    LItems = itm.data;
                    //TbItems.clear();
                    TbItems.rows.add(LItems);
                    TbItems.search("").draw();
                    $('#txtGetItemsYN').val('Y');
                }
            });
        }
        //jQuery.noConflict();
        //$("#ModalFormAddItem").modal("show");
    });

    TbItems.on('click', 'tr', function () {

        var data = TbItems.row(this).data();
        console.log(data);
        //alert('itemCode is ' + data['itemCode']);

            var xitemCode = document.getElementById("txtItemCodeSelected");
            var xitemName = document.getElementById("txtItemNameSelected");
            var xuom = document.getElementById("txtUomSelected");
            var xbatchYN = document.getElementById("txtBatchYNSelected");
            var xserialYN = document.getElementById("txtSerialYNSelected");

        xitemCode.value = data['itemCode'];
        xitemName.value = data['itemName'];
        xuom.value = data['uom'];
        xbatchYN.value = data['batchYN'];
        xserialYN.value = data['serialYN'];

        if (xbatchYN.value == 'Y' || xserialYN.value == 'Y') {
            $('#txtbatchserialno').focus();
        }

    });

    $('#btnCLoseItem').click(function () {
        tbline1 = [];
        tbline2 = [];
        $('#txtItemCodeSelected').val('');
        $('#txtItemNameSelected').val('');
        $('#txtQuantitySelected').val('1');
        $('#txtbatchserialno').val('');
        $('#txtUomSelected').val('');
        $('#txtBatchYNSelected').val('');
        $('#txtSerialYNSelected').val('');
    });

    $('#btnAddItem').click(function () {

        //Add Line Data
        tbline1 = [];
        tbline1.push({
            "itemCode": $('#txtItemCodeSelected').val(),
            "itemName": $('#txtItemNameSelected').val(),
            "whsCode": $('#txtAWhsCode').val(),
            "whsName": $('#txtAWhsName').val(),
            "binCode": $('#txtABinCode').val(),
            "binEntry": $('#txtABinEntry').val(),
            "quantity": $('#txtQuantitySelected').val(),
            "uomEntry": $('#txtUomSelected').val(),
            "uomCode": $('#txtUomSelected').val(),
            "batchYN": $('#txtBatchYNSelected').val(),
            "serialYN": $('#txtSerialYNSelected').val(),
        });
        //console.log(tbline1);
        //TbItems.clear();

        tline.rows.add(tbline1);
        tline.search('').draw();


        var b_number;
        var s_number;
        if ($('#txtBatchYNSelected').val() == 'Y' && $('#txtSerialYNSelected').val() == 'N') {
            b_number = $('#txtbatchserialno').val();
            s_number = '';
        }
        else if ($('#txtBatchYNSelected').val() == 'N' && $('#txtSerialYNSelected').val() == 'Y') {
            b_number = '';
            s_number = $('#txtbatchserialno').val();
        }
        else if ($('#txtBatchYNSelected').val() == 'N' && $('#txtSerialYNSelected').val() == 'N') {
            b_number = '';
            s_number = '';
        }

        //Add Line From Scan
        tbline2 = [];
        tbline2.push([
            $('#txtItemCodeSelected').val(),
            $('#txtItemNameSelected').val(),
            $('#txtQuantitySelected').val(),
            $('#txtAWhsCode').val(),
            $('#txtABinEntry').val(),
            $('#txtABinCode').val(),
            $('#txtUomSelected').val(),
            '',
            b_number,
            s_number
        ]);
        t.rows.add(tbline2);
        t.search('').draw();
        ////tline.search('').draw();

    });


    tbBin.on('select', function () {
        var cellbinCode = tbBin.rows({ selected: true }).data()[0]['binCode'];
        var cellAbsEntry = tbBin.rows({ selected: true }).data()[0]['absEntry'];
        $('#ChooseBinLocation').click(function () {
            var txtToBinCode = document.getElementById("txtBinCode");
            var txtBinEntry = document.getElementById("txtBinName");
            txtToBinCode.value = cellAbsEntry;
            txtBinEntry.value = cellbinCode;
        });
    });

    //GET Stock Whs Bin
    var tline = $('#TbLineStock').DataTable();
    function fncGetStockWhsBin() {
        console.log("Data Loading...");
        document.getElementById("frmLoading").style.display = "block";
        document.getElementById("btnSearch").disabled = true;
        document.getElementById("btnSearch").style.display = "none";
        if (document.getElementById("txtWhsName").value != '' && document.getElementById("txtBinName").value != '') {
            //01-A09-02-A62
            var WhsCode = document.getElementById("txtWhsCode");
            var BinName = document.getElementById("txtBinName");
            $.noConflict();
            $.ajax({
            url: '@Url.Action("GetStock_WhsBin", "Inventory")',
            data: { whsCode: WhsCode.value, binCode: BinName.value},
            type: "GET",
            dataType: "JSON",
            "dataSrc": 'data',
                success: function (data) {
                    document.getElementById("tbDataLine").style.display = "block";
                    document.getElementById("btnSave").style.display = "block";
                    document.getElementById("TabScanBarCode").style.display = "block";

                    tline = $('#TbLineStock').DataTable({

                    "bDestroy": true,
                    "aaData": data.data,
                    "autoWidth": true,
                    "responsive": true,
                    "lengthChange": false,
                    "ordering": true,
                    "pageLength": 20,
                    "lengthMenu": [
                            [20, 50, 100, 200, -1],
                            [20, 50, 100, 200, "All"]
                    ],
                    "columns": [
                        { "data": "itemCode", "autoWidth": true },
                        { "data": "itemName", "autoWidth": true },
                        { "data": "whsCode", "autoWidth": true },
                        { "data": "whsName", "autoWidth": true },
                        { "data": "binCode", "autoWidth": true },
                        { "data": "binEntry", "autoWidth": true },
                        { "data": "quantity", "autoWidth": true },
                        { "data": "uomEntry", "autoWidth": true },
                        { "data": "uomCode", "autoWidth": true },
                        { "data": "batchYN", "autoWidth": true },
                        { "data": "serialYN", "autoWidth": true }
                    ],
                    "language": { "emptyTable": "No Data" },
                    "order": [[1, 'desc']],
                    "info": false,
                    "searching": false
                });
                    tline.columns([2, 4, 7, 8]).visible(false, false);
                    //, 9, 10
                    //document.getElementById("scanbarcode").focus();
                //alert("Download Data Complete");
                    console.log("Download Data Complete");
                    document.getElementById("frmLoading").style.display = "none";
                    $('#txtScanBarCode01').val("");
                    $('#txtScanBarCode01').focus();
            }
            });

            //$('#TbLineStock tbody').empty();
        } else {
            alert("Please Select Warehouse or Bin-Location.\r\n");
            document.getElementById("frmLoading").style.display = "none";

            document.getElementById("btnSearch").style.display = "block";
            document.getElementById("btnSearch").disabled = false;
        }
    }

    function ClearTb() {
        location.reload();
    }

    function fncUpdateQty() {
        document.getElementById("txtUpdQty").value = document.getElementById("Quantity").value;
    }

    function funcAddItemManual(itemType, itemCode, batchSerial, whsCode) {
        //playAudioNoPass();
        //if (confirm("คุณต้องการเพิ่ม Batch Or Serial นี้หรือไม่") == true) {
            //Start Work                   
            if (itemType == 'batch') {
                sBatchSerial = batchSerial;
                console.log(itemCode + ";" + sBatchSerial + ";" + whsCode + ";");
                $.ajax({
                    url: '@Url.Action("GetStockItemBatchWCounting", "Inventory")',
                    data: { itemcode: itemCode, batchnumber: sBatchSerial, whscode: whsCode },
                    type: "GET",
                    dataType: "JSON",
                    "dataSrc": 'data',
                    success: function (data) {
                        var jqueryXml = $(data);
                        console.log(data);
                        if (jqueryXml[0].data.length != 0) {
                            var bItemCode = jqueryXml[0].data[0].itemCode;
                            var bItemName = jqueryXml[0].data[0].itemName;
                            var bQuantity = 1;
                            var bWhsCode = jqueryXml[0].data[0].whsCode;
                            var bBinEntry = jqueryXml[0].data[0].binEntry;
                            var bBinCode = jqueryXml[0].data[0].binCode;
                            var bUOMCode = jqueryXml[0].data[0].uomCode;
                            var bBatchNumber = jqueryXml[0].data[0].batchNumber;
                            var bSerialNumber = jqueryXml[0].data[0].serialNumber;
                            var bTotalQuantity = jqueryXml[0].data[0].quantity;

                            //if (bSerialNumber != '') { bSerialNumber = bSerialNumber } else { bSerialNumber = '' }
                            var bExpDate = jqueryXml[0].data[0].expDate;
                            if (bExpDate == '1899-12-30T00:00:00') {
                                bExpDate = '';
                            } else {
                                bExpDate = bExpDate;
                            }
                            t.row.add([
                                bItemCode,
                                bItemName,
                                bQuantity,
                                bWhsCode,
                                bBinEntry,
                                bBinCode,
                                bUOMCode,
                                bExpDate,
                                sBatchSerial,
                                ''
                            ]).draw(false);

                        } else {
                            alert("Batch Number does not exist.\r\nไม่มีเลข Batch ใน WareHouse นี้");
                            document.getElementById("frmLoading").style.display = "none";
                        }

                    }
                });
            }
            else if (itemType == 'serial') {
                //sItemCode = itemCode;
                sBatchSerial = batchSerial;
                console.log(itemCode + ";" + sBatchSerial + ";" + whsCode + ";");
                if (itemCode == 'DGC110' || itemCode == 'GC18' || itemCode == 'DGC120' || itemCode == 'GC120' || itemCode == 'DGC14' || itemCode == 'GC14' || itemCode == 'GC110' || itemCode == 'C/Cmix-1.0' || itemCode == 'C/Cmix-0.5' || itemCode == 'OCAN-0.5A' || sItemCode == 'DGC18') {
                    if (sBatchSerial.length >= 14) {
                        sBatchSerial = sBatchSerial.substring(0, 12);
                    } else {
                        sBatchSerial = sBatchSerial;
                    }

                    $.ajax({
                        url: '@Url.Action("GetStockItemSerialWCounting", "Inventory")',
                        data: { itemcode: itemCode, serialnumber: sBatchSerial, whscode: whsCode },
                        type: "GET",
                        dataType: "JSON",
                        "dataSrc": 'data',
                        success: function (data) {
                            var jqueryXml = $(data);

                            if (jqueryXml[0].data.length != 0) {
                                var bItemCode = jqueryXml[0].data[0].itemCode;
                                var bItemName = jqueryXml[0].data[0].itemName;
                                var bQuantity = 1;
                                var bWhsCode = jqueryXml[0].data[0].whsCode;
                                var bBinEntry = jqueryXml[0].data[0].binEntry;
                                var bBinCode = jqueryXml[0].data[0].binCode;
                                var bUOMCode = jqueryXml[0].data[0].uomCode;
                                var bExpDate = jqueryXml[0].data[0].expDate;
                                if (bExpDate == '1899-12-30T00:00:00') {
                                    bExpDate = '';
                                } else {
                                    bExpDate = bExpDate;
                                }
                                // Check Serial duplicate [1 Only]
                                for (let chks = 0; chks < t.column(0).data().length; chks++) {
                                    var data = t.row(chks).data();
                                    //console.log("Serial Line : " + chks);
                                    //console.log(data[9]);
                                    if (sBatchSerial == data[9] && sBatchSerial != '') {
                                        playAudioNoPass();
                                        console.log("Item :" + bItemCode + ", Serial duplicate -> " + sBatchSerial);
                                        alert("Item:" + bItemCode + ", Serial duplicate->" + sBatchSerial);                                        
                                        document.getElementById("frmLoading").style.display = "none";
                                        return false;
                                    }
                                }

                                t.row.add([
                                    bItemCode,
                                    bItemName,
                                    bQuantity,
                                    bWhsCode,
                                    bBinEntry,
                                    bBinCode,
                                    bUOMCode,
                                    bExpDate,
                                    '',
                                    sBatchSerial
                                ]).draw(false);
                            }
                            else {                                
                                document.getElementById("frmLoading").style.display = "none";
                                alert("Serial Number does not exist.\r\nไม่มีเลข Serial ใน Warehouse นี้");                                                                
                            }

                        }
                    });
                }
            }
            else if (itemType == 'no') {
                console.log('No Serial And No Batch But ItemCode : ' + sItemCode);
                    $.ajax({
                        url: '@Url.Action("GetItemByWhs", "Inventory")',
                        data: { itemcode: itemCode, whscode: whsCode},
                        type: "GET",
                        dataType: "JSON",
                        "dataSrc": 'data',
                        success: function (val) {
                            var jqueryXml = $(val);
                            //console.log(val);
                            if (jqueryXml[0].data.length != 0) {

                                var bItemCode = jqueryXml[0].data[0].itemCode;
                                var bItemName = jqueryXml[0].data[0].itemName;
                                var bQuantity = sQty;
                                var bWhsCode = jqueryXml[0].data[0].whsCode;
                                var bBinEntry = jqueryXml[0].data[0].binEntry;
                                var bBinCode = jqueryXml[0].data[0].binCode;
                                var bUOMCode = jqueryXml[0].data[0].uomCode;
                                var bBatchNumber = '';
                                var bSerialNumber = '';

                                var bExpDate = jqueryXml[0].data[0].expDate;
                                if (bExpDate == '1899-12-30T00:00:00') {
                                    bExpDate = '';
                                } else {
                                    bExpDate = bExpDate;
                                }
                                t.row.add([
                                    bItemCode,
                                    bItemName,
                                    bQuantity,
                                    bWhsCode,
                                    bBinEntry,
                                    bBinCode,
                                    bUOMCode,
                                    bExpDate,
                                    '',
                                    ''
                                ]).draw(false);
                            }
                            else {
                                playAudioNoPass();
                                alert("ไม่มี Item Barcode ใน Warehouse นี้");
                                document.getElementById("frmLoading").style.display = "none";
                            }

                        }

                    });
            }
            //End Work   
        //} else {
        //    console.log("Canceled!")
        //}
    }

    //Add Data In Row
    var t = $('#TbLineScan').DataTable({
        "bDestroy": true,
        "autoWidth": true,
        "responsive": true,
        "lengthChange": true,
        "ordering": true,
        "pageLength": 20,
         "columns": [
            { "width": "20%", "targets": 0 },
            { "width": "20%", "targets": 0 },
            { "width": "20%", "targets": 0 },
            { "width": "20%", "targets": 0 },
            { "width": "20%", "targets": 0 },
            { "width": "20%", "targets": 0 },
            { "width": "20%", "targets": 0 },
            { "width": "20%", "targets": 0 },
            { "width": "20%", "targets": 0 },
            { "width": "20%", "targets": 0 }
        ],
        "lengthChange": false,
        "select": true,
        "ordering": false,
        "info": false,
        "searching": false,
        "scrollX": true,
        "scrollY": false,
        rowCallback: function (row, data, index) {

        },
        "footerCallback": function (row, data, start, end, display) {
            var api = this.api();
            nb_cols = api.columns().nodes().length;
            //console.log(data[0].quantity);
            console.log("Callback Data :::");
            console.log(api);
            var sumQty = 0;
            for (let ls = 0; ls < api.column(0).data().length; ls++) {
                var datals = api.row(ls).data();
                //console.log(datals);
                //console.log("QTY :" + parseInt(datals[2]));
                sumQty = sumQty + parseInt(parseInt(datals[2]));
            }

            $('#txtNoCounting').val(sumQty);
        },
    });
    // { "width": "20%", "targets": 0 },
    //BarcodeUDOM
    $('#addRow01').on('click', function () {

        if ($('#txtScanBarCode01').val() != '') {
            document.getElementById("txtScanBarCode01").disabled = true;
            document.getElementById("frmLoading").style.display = "block";
            var txtScanBarCode = document.getElementById("txtScanBarCode01").value;
            const strArr = txtScanBarCode.split(";");
            //document.getElementById("demo").innerHTML = StrBarCodeArr[4];
            var sItemCode = strArr[0];
            var sBatch = strArr[1];
            var sSerial = strArr[2];
            var sArr3 = strArr[3];
            var sQty;
            let lcase1 = sArr3.toLowerCase();
            let iQTY = lcase1.slice(0, 3);

            if (iQTY != "qty") {
                sQty = document.getElementById("txtQuantity01").value;
                sQty = parseFloat(sQty);
            } else if (iQTY == "qty") {
                sQty = sArr3.substring(3, 9);
                sQty = parseFloat(sQty);
                if (isNaN(sQty)) {
                    sQty = document.getElementById("txtQuantity01").value;
                } else {
                    sQty = sQty;
                }
            }

            var sBatchSerial;
            var sBinEntry = document.getElementById("txtBinName").value;
            //var sBinEntry = '05-1048';
            console.log("INPUT: " + txtScanBarCode);
            console.log("QTY: " + sQty);
            $('#txtScanBarCode01').val("");
            $('#txtScanBarCode01').focus();
            var sWhsCode = document.getElementById("txtWhsCode").value;
            // For Batch
            if (sBatch != '') {
                sBatchSerial = sBatch;
                console.log(sItemCode + ";" + sBatchSerial + ";" + sBinEntry + ";");
                $.ajax({
                    url: '@Url.Action("GetStockItemBatchBin", "Inventory")',
                    data: { itemcode: sItemCode, batchnumber: sBatchSerial, binentry: sBinEntry },
                    type: "GET",
                    dataType: "JSON",
                    "dataSrc": 'data',
                    success: function (data) {
                        var jqueryXml = $(data);
                        //console.log(data);
                        if (data === undefined) {
                            fncClearAndFocus();
                        }
                        if (jqueryXml[0].data.length != 0) {

                            var bItemCode = jqueryXml[0].data[0].itemCode;
                            var bItemName = jqueryXml[0].data[0].itemName;
                            var bQuantity = sQty;
                            var bWhsCode = jqueryXml[0].data[0].whsCode;
                            var bBinEntry = jqueryXml[0].data[0].binEntry;
                            var bBinCode = jqueryXml[0].data[0].binCode;
                            var bUOMCode = jqueryXml[0].data[0].uomCode;
                            var bBatchNumber = jqueryXml[0].data[0].batchNumber;
                            var bSerialNumber = jqueryXml[0].data[0].serialNumber;
                            var bTotalQuantity = jqueryXml[0].data[0].quantity;

                            //if (bSerialNumber != '') { bSerialNumber = bSerialNumber } else { bSerialNumber = '' }
                            var bExpDate = jqueryXml[0].data[0].expDate;
                            if (bExpDate == '1899-12-30T00:00:00') {
                                bExpDate = '';
                            } else {
                                bExpDate = bExpDate;
                            }
                            t.row.add([
                                bItemCode,
                                bItemName,
                                bQuantity,
                                bWhsCode,
                                bBinEntry,
                                bBinCode,
                                bUOMCode,
                                bExpDate,
                                sBatchSerial,
                                ''
                            ]).draw(false);

                            playAudioPass();
                            document.getElementById("frmLoading").style.display = "none";
                            document.getElementById("txtScanBarCode01").disabled = false;
                            $('#txtScanBarCode01').val("");
                            $('#txtScanBarCode01').focus();
                        } else {
                            playAudioNoPass();
                            alert("Batch Number does not exist.\r\nไม่มีเลข Batch ใน Bin Location นี้");
                            //function add item comfirm
                            funcAddItemManual('batch', sItemCode, sBatchSerial, sWhsCode)

                            document.getElementById("frmLoading").style.display = "none";
                            document.getElementById("txtScanBarCode01").disabled = false;
                            $('#txtScanBarCode01').val("");
                            $('#txtScanBarCode01').focus();
                        }

                    }

                });
            }
            // For Serial
            else if (sSerial != '') {
                if (sItemCode == 'DGC110' || sItemCode == 'GC18' || sItemCode == 'DGC120' || sItemCode == 'GC120' || sItemCode == 'DGC14' || sItemCode == 'GC14' || sItemCode == 'DGC110' || sItemCode == 'GC110' || sItemCode == 'C/Cmix-1.0' || sItemCode == 'C/Cmix-0.5' || sItemCode == 'OCAN-0.5A' || sItemCode == 'DGC18') {
                    if (sSerial.length >= 14) {
                        sBatchSerial = sSerial.substring(0, 12);
                    } else {
                        sBatchSerial = sSerial;
                    }
                    console.log(sBatchSerial);
                }
                //sBatchSerial = sSerial;
                $.ajax({
                    url: '@Url.Action("GetStockItemSerialBin", "Inventory")',
                    data: { itemcode: sItemCode, serialnumber: sBatchSerial, binentry: sBinEntry },
                    type: "GET",
                    dataType: "JSON",
                    "dataSrc": 'data',
                    success: function (data) {
                        var jqueryXml = $(data);
                        if (data === undefined) {
                            fncClearAndFocus();
                        }
                        if (jqueryXml[0].data.length != 0) {
                            //=========================
                            //jqueryXml[0].data[0].quantity
                            //jqueryXml[0].data[0].batchNumber
                            //jqueryXml[0].data[0].serialNumber
                            var bItemCode = jqueryXml[0].data[0].itemCode;
                            var bItemName = jqueryXml[0].data[0].itemName;
                            var bQuantity = sQty;
                            var bWhsCode = jqueryXml[0].data[0].whsCode;
                            var bBinEntry = jqueryXml[0].data[0].binEntry;
                            var bBinCode = jqueryXml[0].data[0].binCode;
                            var bUOMCode = jqueryXml[0].data[0].uomCode;
                            var bBatchNumber = jqueryXml[0].data[0].batchNumber;
                            var bSerialNumber = jqueryXml[0].data[0].serialNumber;
                            var bTotalQuantity = jqueryXml[0].data[0].quantity
                            //if (bSerialNumber != '') { bSerialNumber = bSerialNumber } else { bSerialNumber = '' }
                            var bExpDate = jqueryXml[0].data[0].expDate;
                            if (bExpDate == '1899-12-30T00:00:00') {
                                bExpDate = '';
                            } else {
                                bExpDate = bExpDate;
                            }
                            // Check Serial duplicate [1 Only]
                            for (let chks = 0; chks < t.column(0).data().length; chks++) {
                                var data = t.row(chks).data();
                                //console.log("Serial Line : " + chks);
                                //console.log(data[9]);
                                if (sBatchSerial == data[9] && sBatchSerial != '') {
                                    playAudioNoPass();
                                    console.log("Item :" + bItemCode + ", Serial duplicate -> " + sBatchSerial);
                                    alert("Item:" + bItemCode + ", Serial duplicate->" + sBatchSerial);                                    
                                    document.getElementById("frmLoading").style.display = "none";
                                    document.getElementById("txtScanBarCode01").disabled = false;
                                    return false;
                                }
                            }

                            t.row.add([
                                bItemCode,
                                bItemName,
                                bQuantity,
                                bWhsCode,
                                bBinEntry,
                                bBinCode,
                                bUOMCode,
                                bExpDate,
                                '',
                                sBatchSerial
                            ]).draw(false);
                            
                            playAudioPass();
                            document.getElementById("frmLoading").style.display = "none";
                            document.getElementById("txtScanBarCode01").disabled = false;
                            $('#txtScanBarCode01').val("");
                            $('#txtScanBarCode01').focus();
                        }
                        else {
                            playAudioNoPass();
                            alert("Serial Number does not exist.\r\nไม่มีเลข Serial ใน Bin Location นี้");

                            //function add item comfirm
                            funcAddItemManual('serial', sItemCode, sBatchSerial, sWhsCode)

                            document.getElementById("frmLoading").style.display = "none";
                            document.getElementById("txtScanBarCode01").disabled = false;
                            $('#txtScanBarCode01').val("");
                            $('#txtScanBarCode01').focus();
                        }

                    }
                });
            }
            // For No Serial No Batch
            else if (sSerial == '' && sBatch == '') {
                console.log('No Serial And No Batch But ItemCode : ' + sItemCode);
                $.ajax({
                    url: '@Url.Action("GetItemByBinCode", "Inventory")',
                    data: { itemcode: sItemCode, binCode: sBinEntry},
                    type: "GET",
                    dataType: "JSON",
                    "dataSrc": 'data',
                    success: function (val) {
                        var jqueryXml = $(val);
                        if (val === undefined) {
                            fncClearAndFocus();
                        }
                        if (jqueryXml[0].data.length != 0) {

                            var bItemCode = jqueryXml[0].data[0].itemCode;
                            var bItemName = jqueryXml[0].data[0].itemName;
                            var bQuantity = sQty;
                            var bWhsCode = jqueryXml[0].data[0].whsCode;
                            var bBinEntry = jqueryXml[0].data[0].binEntry;
                            var bBinCode = jqueryXml[0].data[0].binCode;
                            var bUOMCode = jqueryXml[0].data[0].uomCode;
                            var bBatchNumber = '';
                            var bSerialNumber = '';

                            var bExpDate = jqueryXml[0].data[0].expDate;
                            if (bExpDate == '1899-12-30T00:00:00') {
                                bExpDate = '';
                            } else {
                                bExpDate = bExpDate;
                            }
                            t.row.add([
                                bItemCode,
                                bItemName,
                                bQuantity,
                                bWhsCode,
                                bBinEntry,
                                bBinCode,
                                bUOMCode,
                                bExpDate,
                                '',
                                ''
                            ]).draw(false);

                            playAudioPass();
                            document.getElementById("frmLoading").style.display = "none";
                            document.getElementById("txtScanBarCode01").disabled = false;
                            $('#txtScanBarCode01').val("");
                            $('#txtScanBarCode01').focus();
                        }
                        else {
                            playAudioNoPass();
                            alert("ไม่มี Item Barcode ใน Bin Location นี้");

                            //function add item comfirm                            
                            funcAddItemManual('no', sItemCode, sBatchSerial, sWhsCode)                            
                            document.getElementById("frmLoading").style.display = "none";
                            document.getElementById("txtScanBarCode01").disabled = false;
                            $('#txtScanBarCode01').val("");
                            $('#txtScanBarCode01').focus();
                        }

                    }

                });
            }
        }
    });
    $('#addRow01').click();

    var input01 = document.getElementById("txtScanBarCode01");
    input01.addEventListener("keyup", function (event) {
        if (event.keyCode === 13) {
            event.preventDefault();
            document.getElementById("addRow01").click();
        }
    });


    //BarcodeProduct
    //vvvvvNot Use
    $('#addRow02').on('click', function () {

        if ($('#txtScanBatchSerial02').val()!='') {

            var getSelectedValue = document.querySelector('input[name="typeItem"]:checked');
            if (getSelectedValue != null) {
                if (getSelectedValue.value == "Batch") {
                     if ($('#txtScanBatchSerial02').val()!='') {
                        $.ajax({
                            url: '@Url.Action("GetStockItemBatchBin", "Inventory")',
                            data: { itemcode: $('#txtScanBarCode02').val(), batchnumber: $('#txtScanBatchSerial02').val(), binentry: $('#txtBinName').val()},
                            type: "GET",
                            dataType: "JSON",
                            "dataSrc": 'data',
                            success: function (data) {
                                var jqueryXml = $(data);
                                if (jqueryXml[0].data.length != 0) {
                                    //=========================
                                    var bItemCode = jqueryXml[0].data[0].itemCode;
                                    var bItemName = jqueryXml[0].data[0].itemName;
                                    var bQuantity = document.getElementById("txtQuantity02").value;
                                    var bWhsCode = jqueryXml[0].data[0].whsCode;
                                    var bWhsEntry = jqueryXml[0].data[0].whsEntry;
                                    var bBinCode = jqueryXml[0].data[0].binCode;
                                    var bBinEntry = jqueryXml[0].data[0].binEntry;
                                    var bUOMCode = jqueryXml[0].data[0].uomCode;
                                    var bBatchNumber = jqueryXml[0].data[0].batchNumber;
                                    var bSerialNumber = jqueryXml[0].data[0].serialNumber;
                                    //if (bSerialNumber != '') { bSerialNumber = bSerialNumber } else { bSerialNumber = '' }
                                    var bExpDate = jqueryXml[0].data[0].expDate;
                                    if (bExpDate == '1899-12-30T00:00:00') {
                                        bExpDate = '';
                                    } else {
                                        bExpDate = bExpDate;
                                    }

                                    if ($('#txtScanBarCode02').val() != '') {
                                        t.row.add([
                                            bItemCode,
                                            bItemName,
                                            bQuantity,
                                            bWhsCode,
                                            bBinEntry,
                                            bBinCode,
                                            bUOMCode,
                                            bExpDate,
                                            bBatchNumber,
                                            ''
                                        ]).draw(false);
                                    } else {
                                        return false;
                                    }

                                    $('#txtScanBarCode02').val("");
                                    $('#txtScanBatchSerial02').val("");
                                    $('#txtScanBarCode02').focus();
                                    //=========================

                                } else {
                                    alert("Batch Number does not exist.");
                                    $('#txtScanBarCode02').val("");
                                    $('#txtScanBatchSerial02').val("");
                                    $('#txtScanBarCode02').focus();
                                    return false;
                                }

                            }
                        });
        }
                }
                else if (getSelectedValue.value == "Serial") {
                     if ($('#txtScanBatchSerial02').val()!='') {

                        $.ajax({
                            url: '@Url.Action("GetStockItemSerialBin", "Inventory")',
                            data: { itemcode: $('#txtScanBarCode02').val(), serialnumber: $('#txtScanBatchSerial02').val(), binentry: $('#txtBinName').val()},
                            type: "GET",
                            dataType: "JSON",
                            "dataSrc": 'data',
                            success: function (data) {
                                var jqueryXml = $(data);
                                if (jqueryXml[0].data.length != 0) {
                                    //=========================
                                    var bItemCode = jqueryXml[0].data[0].itemCode;
                                    var bItemName = jqueryXml[0].data[0].itemName;
                                    var bQuantity = document.getElementById("txtQuantity02").value;
                                    var bWhsCode = jqueryXml[0].data[0].whsCode;
                                    var bWhsEntry = jqueryXml[0].data[0].whsEntry;
                                    var bBinCode = jqueryXml[0].data[0].binCode;
                                    var bBinEntry = jqueryXml[0].data[0].binEntry;
                                    var bUOMCode = jqueryXml[0].data[0].uomCode;
                                    var bBatchNumber = jqueryXml[0].data[0].batchNumber;
                                    var bSerialNumber = jqueryXml[0].data[0].serialNumber;
                                    //if (bSerialNumber != '') { bSerialNumber = bSerialNumber } else { bSerialNumber = '' }
                                    var bExpDate = jqueryXml[0].data[0].expDate;
                                    if (bExpDate == '1899-12-30T00:00:00') {
                                        bExpDate = '';
                                    } else {
                                        bExpDate = bExpDate;
                                    }

                                    if ($('#txtScanBarCode02').val() != '') {
                                            t.row.add([
                                                bItemCode,
                                                bItemName,
                                                bQuantity,
                                                bWhsCode,
                                                bBinEntry,
                                                bBinCode,
                                                bUOMCode,
                                                bExpDate,
                                                '',
                                                bBatchNumber
                                            ]).draw(false);
                                    } else {
                                        return false;
                                    }

                                    $('#txtScanBarCode02').val("");
                                    $('#txtScanBatchSerial02').val("");
                                    $('#txtScanBarCode02').focus();
                                    //=========================

                                } else {
                                    alert("Serial Number does not exist.");
                                    $('#txtScanBarCode02').val("");
                                    $('#txtScanBatchSerial02').val("");
                                    $('#txtScanBarCode02').focus();
                                    return false;
                                }

                            }
                        });


        }
                }
            }
            else {
                return false;
            }

        }

    });
    $('#addRow02').click();
    //^^^^Not Use

    var input02 = document.getElementById("txtScanBarCode02");
    var input12 = document.getElementById("txtScanBatchSerial02");
    input02.addEventListener("keyup", function (event) {
        if (event.keyCode === 13) {
            event.preventDefault();
            document.getElementById("txtScanBatchSerial02").focus();
            input12.addEventListener("keyup", function (event) {
                if (event.keyCode === 13) {
                    event.preventDefault();
                    document.getElementById("addRow02").click();
                }
            });
        }
    });

    $('#btnResetQty').click(function () {
        $('#txtQuantity01').val('1');
    });

    $('#btnFocusText').click(function () {
        $('#txtScanBarCode01').val('');
        $('#txtScanBarCode01').focus();
    });

    function fncClearAndFocus() {
        document.getElementById("frmLoading").style.display = "none";
        document.getElementById("txtScanBarCode01").disabled = false;
        $('#txtScanBarCode01').val("");
        $('#txtScanBarCode01').focus();
    }

    function up(max) {
        document.getElementById("txtQuantity01").value = parseInt(document.getElementById("txtQuantity01").value) + 1;
        if (document.getElementById("txtQuantity01").value >= parseInt(max)) {
            document.getElementById("txtQuantity01").value = max;
        }
    }
    function down(min) {
        document.getElementById("txtQuantity01").value = parseInt(document.getElementById("txtQuantity01").value) - 1;
        if (document.getElementById("txtQuantity01").value <= parseInt(min)) {
            document.getElementById("txtQuantity01").value = min;
        }
    }

    $('#btnDelRow').click(function () {
        t.row('.selected').remove().draw(false);
    });

    function POSTDataAPI() {
        document.getElementById("frmLoading").style.display = "block";
        var sHead = {};
        var sLine = [];
        var dLine = [];
        var serialLine = [];
        var batchLine = [];
        var arrayLine = {};

        var whsCode = document.getElementById("txtWhsCode");
        var binCode = document.getElementById("txtBinCode");

        let regex = /\,(?!\s*?[\{\[\"\'\w])/g;
        var str = '';


        if (!t.data().count()) {
            alert('Empty table');
            document.getElementById("btnSave").style.display = 'block';
            document.getElementById("frmLoading").style.display = "none";
        }
        else {
            //Start push
            //Tb = List Data Line
            console.log("=== List Data Line ===");
            for (let ctbline = 0; ctbline < tline.column(0).data().length; ctbline++) {
                arrDataLine = {};
                var ldata = tline.row(ctbline).data();

                var productType = "";

                if (ldata.batchYN == "Y") {
                    productType = "b";
                } else {
                    if (ldata.serialYN == "Y") {
                        productType = "s";
                    }
                }

                if (ldata.batchYN == "N" && ldata.serialYN == "N") {
                    productType = "n";
                }

                arrDataLine.itemCode = ldata.itemCode;
                arrDataLine.quantity = parseFloat(ldata.quantity);
                arrDataLine.uomCode = ldata.uomCode;
                arrDataLine.whsCode = whsCode.value;
                arrDataLine.binEntry = parseInt(binCode.value);
                arrDataLine.productType = productType;
                arrDataLine.batchYN = ldata.batchYN;
                arrDataLine.serialYN = ldata.serialYN;
                dLine.push(arrDataLine);
            }
            console.log(dLine);


            console.log("=== List Data Scan ===");
            //Tb = Data Line From Scan BarCode
            for (let rr = 0; rr < t.column(0).data().length; rr++) {

                arrayLine = {};
                var data = t.row(rr).data();
                var productType = "";
                var batchSerialNo = "";

                //console.log('Date pure....');
                //console.log(data);

                if (data[8] != "") {
                    productType = "b";
                    batchSerialNo = data[1] + ";" + data[8];
                } else {
                    if (data[9] != "") {
                        productType = "s";
                        batchSerialNo = data[1] + ";" + data[9];
                    }
                }

                if (data[8] == "" && data[9] == "") {
                    productType = "n";
                    batchSerialNo = 'non' + data[0];
                }

                arrayLine.itemCode = data[0];
                arrayLine.quantity = parseInt(data[2]);
                arrayLine.whsCode = data[3];
                arrayLine.binEntry = data[4];
                arrayLine.uomCode = data[6];
                arrayLine.productType = productType;
                arrayLine.batchNumber = data[8];
                arrayLine.serialNumber = data[9];
                arrayLine.batchSerialNo = batchSerialNo;
                sLine.push(arrayLine);
            }
            console.log(sLine);

            console.log("Grouping...")
            //Group batchSerialNo
            const groupBy = sLine.reduce((acc, cur) => {
                acc[cur.batchSerialNo] ? acc[cur.batchSerialNo] = {
                    ...acc[cur.batchSerialNo],
                    quantity: acc[cur.batchSerialNo].quantity + cur.quantity
                } : acc[cur.batchSerialNo] = {
                    ...cur
                };
                return acc;
            }, {});
            const output = Object.values(groupBy).map((item) => ({
                ...item
            }));
            console.log(output);

            const data2 = dLine;
            //===========================================================
            arrDataLineB = {};
            arrDataLineS = {};
            arrDataLineM = {};
            arrDataHead = {};
            arrLineAll = [];

            var cSerialNo
            var sumQTY = 0;
            for (let x = 0; x < data2.length; x++) {
                //arrDataHead = {};

                var serialbox = [];
                var batchbox = [];
                for (let y = 0; y < output.length; y++) {
                    //arrDataLineS = {};
                    //
                    //console.log(data2[x].itemCode + '==' + output[y].itemCode);
                    if (data2[x].itemCode == output[y].itemCode) {
                        arrDataLineS = {};
                        arrDataLineB = {};

                        if (output[y].productType == 'b') {
                            arrDataLineB.itemCode = output[y].itemCode;
                            arrDataLineB.quantity = output[y].quantity;
                            arrDataLineB.batchNumber = output[y].batchNumber;
                            batchbox.push(arrDataLineB);
                            serialbox = [];
                            sumQTY = sumQTY + output[y].quantity;
                        }


                        if (output[y].productType == 's') {
                            arrDataLineS.itemCode = output[y].itemCode;
                            arrDataLineS.quantity = output[y].quantity;
                            arrDataLineS.serialNumber = output[y].serialNumber;
                            serialbox.push(arrDataLineS);
                            batchbox = [];
                            sumQTY = sumQTY + output[y].quantity;
                        }

                        if (output[y].productType == 'n') {
                            sumQTY = sumQTY + output[y].quantity;
                        }


                        //console.log(output[y].quantity + "->" + sumQTY);

                        arrDataHead.itemCode = data2[x].itemCode;
                        arrDataHead.quantity = sumQTY;
                        arrDataHead.uomCode = data2[x].uomCode;
                        arrDataHead.whsCode = data2[x].whsCode;
                        arrDataHead.binEntry = data2[x].binEntry;
                        arrDataHead.productType = data2[x].productType;
                        arrDataHead.batchLine = batchbox;
                        arrDataHead.serialLine = serialbox;

                    }
                    else {
                        arrDataHead = {};

                        arrDataHead.itemCode = data2[x].itemCode;
                        arrDataHead.quantity = sumQTY;
                        arrDataHead.uomCode = data2[x].uomCode;
                        arrDataHead.whsCode = data2[x].whsCode;
                        arrDataHead.binEntry = data2[x].binEntry;
                        arrDataHead.productType = data2[x].productType;
                        arrDataHead.batchLine = batchbox;
                        arrDataHead.serialLine = serialbox;

                    }


                }
                console.log(arrDataHead);
                arrLineAll.push(arrDataHead);

                sumQTY = 0;
                arrDataHead = {};

            }
            //===========================================================

            //Header_Document
            //console.log(arrDataAll);
            sHead.series = $('#txtSeries').val();
            sHead.countingDate = $('#txtCountingDate').val();
            sHead.countingTime = $('#txtCountingTime').val();
            sHead.ref2 = $('#ref2').val();
            sHead.comments = $('#comments').val();
            sHead.Udf_BinLocation = $('#txtBinName').val();
            sHead.line = arrLineAll;
            console.log("Json Complete..");
            console.log(sHead);

             $.ajax({
                type: "POST",
                url: '@Url.Action("PostInventoryCounting", "Inventory")',
                data: { sendInventoryCounting: sHead },
                dataType: "JSON",
                success: function (ex) {
                    //console.log(ex);
                    if (ex.errorCode == 0) {
                        alert("Successfully.");
                        document.getElementById("btnSave").style.display = 'none';
                        document.getElementById("frmLoading").style.display = "none";
                        location.reload();
                    } else {
                        console.log(ex.errorMsg);
                        alert(ex.errorMsg);
                        document.getElementById("btnSave").style.display = 'block';
                        document.getElementById("frmLoading").style.display = "none";
                    }
                }
            });
            //End push
        }

    }


    //Start #PrintList
    @*$("#PrintBinC").click(function () {
        console.log('PrintBinC');
        //PrintLableForTransfer

        if ($('#txtWhsName_C').val() != "") {
            var sLine = [];
            var sData = [];
            var arrayLine = {};
            var strDetail = '';
            var sHead = {};
            var print = {};

            for (let rr = 0; rr < tbDataBinCounted.column(0).data().length; rr++) {

                arrayLine = {};
                var data = tbDataBinCounted.row(rr).data();
                //console.log(data);
                arrayLine.rowNo = rr + 1;
                arrayLine.whsCode = data.c_BinCode;
                arrayLine.whsName = data.whsName;
                arrayLine.binCode = data.binCode;
                arrayLine.c_BinCode = data.c_BinCode;
                sLine.push(arrayLine);
            }

            //Data Head
            sHead.whsCode_Head = $('#txtWhsCode_C').val();
            sHead.line = sLine;
            //console.log(sHead);

            //Send To Print
            sData.push(sHead);
            console.log(sData);
            print.Data = sData;
            if (sLine.length > 0) {

                    $.ajax({
                        url: '@Url.Action("PrintItemLablePDFAction", "Inventory")',
                        type: "POST",
                        data: { print: print},
                        dataType: "JSON",
                        success: function (data) {
                            //console.log(data);
                            if (data == 1) {
                                window.location.href = "@Url.Action("PrintBinCounted", "Inventory")";
                                //PrintBinLocationCounted
                            }
                        }
                    });
            }

        }

    });*@
    //End #PrintList

    let dateDropdown = document.getElementById('select-year');

    let currentYear = new Date().getFullYear();
    let earliestYear = 2018;
    while (currentYear >= earliestYear) {
        let dateOption = document.createElement('option');
        dateOption.text = currentYear;
        dateOption.value = currentYear;
        dateDropdown.add(dateOption);
        currentYear -= 1;
    }
</script>

