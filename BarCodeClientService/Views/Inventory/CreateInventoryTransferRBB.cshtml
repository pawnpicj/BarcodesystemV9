@{
    ViewData["Title"] = "InventoryTransfer (Return Borrow Bills)";
    DateTime dt = DateTime.Now;
    ViewData["Date"] = dt.ToShortDateString();
}

<link href="~/css/styles.css" rel="stylesheet" />
<link href="~/css/DataTable/jquery.dataTables.min.css" rel="stylesheet" />
<link href="~/css/DataTable/rowReorder.dataTables.min.css" rel="stylesheet" />
@*<link href="~/css/DataTable/responsive.dataTables.min.css" rel="stylesheet" />*@

<script src="~/css/DataTable/jquery-3.3.1.js"></script>
<script src="~/css/DataTable/jquery.dataTables.min.js"></script>
<script src="~/css/DataTable/dataTables.rowReorder.min.js"></script>
<script src="~/css/DataTable/moment.min.js"></script>
<script src="~/css/DataTable/datetime-moment.js"></script>

<script src="https://cdn.datatables.net/buttons/1.6.1/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/select/1.3.1/js/dataTables.select.min.js"></script>
<script src="https://editor.datatables.net/extensions/Editor/js/dataTables.editor.min.js"></script>

<script type="text/javascript">
    /*DocDate*/
    $(document).ready(function () {
        var now = new Date();
        var day = ("0" + now.getDate()).slice(-2);
        var month = ("0" + (now.getMonth() + 1)).slice(-2);
        var today = now.getFullYear() + "-" + (month) + "-" + (day);
        $('#DocDate').val(today);
        $('#DocumentDate').val(today);
    });

    function checkBarcodeUDOM() {
        document.getElementById("divBarcodeUDOM").style.display = "block";
        document.getElementById("divBarcodeProduct").style.display = "none";
        document.getElementById("txtScanBarCode01").focus();

        document.getElementById("rdoTypeItem1").checked = false;
        document.getElementById("rdoTypeItem2").checked = false;
        document.getElementById("txtQuantity02").disabled = true;
        document.getElementById("txtScanBarCode02").disabled = true;
        document.getElementById("txtScanBatchSerial02").disabled = true;

    }

    function checkBarcodeProduct() {
        document.getElementById("divBarcodeUDOM").style.display = "none";
        document.getElementById("divBarcodeProduct").style.display = "block";
        document.getElementById("txtScanBarCode02").focus();
    }

    function chTypeItem() {
        document.getElementById("txtQuantity02").disabled = false;
        document.getElementById("txtScanBarCode02").disabled = false;
        document.getElementById("txtScanBatchSerial02").disabled = false;
        document.getElementById("txtScanBarCode02").focus();
        document.getElementById("txtQuantity02").value = "1";
        document.getElementById("txtScanBarCode02").value = "";
        document.getElementById("txtScanBatchSerial02").value = "";
    }

</script>

<style>
    tr.selected {
        background: red;
        color: red;
    }

    #main {
        position: absolute;
    }

    .color_tap {
        min-width: 60px;
        background-color: #5f95c3;
        color: #ffffff;
        font-weight: 600;
        margin-right: 1px;
    }

    .nav-tabs .nav-link {
        border-radius: 0px 12px 0px 0px;
        border: 1px solid rgb(193, 193, 193);
        height: 40px;
        line-height: 20px;
    }

    .modal {
        z-index: 200000;
    }

    .modal-header {
        background: #5f95c3;
        height: 40px;
        color: #ffffff;
    }

        .modal-header b {
            margin-top: -10px;
        }

    #TbAR table tr td {
        position: relative !important;
        padding: 0px !important;
        height: 35px;
        margin-left: 15px;
        margin-top: 10px;
        background-color: none;
    }

    table tbody tr td {
        background-color: #ffffff;
        color: black;
    }

    table tbody tr.selected td {
        background: #94d8e1;
        color: red;
    }

        table tbody tr.selected td .clsinput {
            background: #94d8e1;
            color: red;
        }

    .clsinput:focus {
        outline: none;
    }

    .ctd {
        text-align: center;
    }

    .color_tap_cv {
        min-width: 60px;
        background-color: #ffa200;
        color: black;
        font-weight: 600;
        margin-right: 1px;
        cursor:pointer;
    }

    /* =================================================== */
    .cover-spin {
        position: fixed;
        width: 100%;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        background-color: rgba(255,255,255,0.7);
        z-index: 9999;
        display: none;
    }

    @@-webkit-keyframes spin {
        from {
            -webkit-transform: rotate(0deg);
        }

        to {
            -webkit-transform: rotate(360deg);
        }
    }

    @@keyframes spin {
        from {
            transform: rotate(0deg);
        }

        to {
            transform: rotate(360deg);
        }
    }

    .cover-spin::after {
        content: '';
        display: block;
        position: absolute;
        left: 48%;
        top: 40%;
        width: 40px;
        height: 40px;
        border-style: solid;
        border-color: black;
        border-top-color: transparent;
        border-width: 4px;
        border-radius: 50%;
        -webkit-animation: spin .8s linear infinite;
        animation: spin .8s linear infinite;
    }
    /* =================================================== */
</style>

<div id="#main">
    <div id="frmLoading" class="cover-spin" style="display:none"></div>
    @* TimeLine *@
    <div class="row" style="margin-left:5px;margin-top:5px;color:#696969;">
        <h5 style="margin-top:5px;color:#696969;">
            <a asp-action="DashboardInventory" asp-controller="Dashboard" onclick="return confirm('Unsaved data will be lost. Do you want to continue without saving?')"><i class="fas fa-home"></i> Dashboard</a>
            <span>
                <a asp-action="ShowInventory" asp-controller="InventoryTransfer" onclick="return confirm('Unsaved data will be lost. Do you want to continue without saving?')"><i class="fa fa-caret-right align-right"></i> Inventory Transfer</a>
                <i class="fa fa-caret-right align-right"></i> Create InventoryTransfer (CV)
            </span>
        </h5>
    </div>
    <hr />

    <div style="padding: 10px; color: #696969;">
        <ul class="nav nav-tabs Tap-PA" id="mytab" role="tablist">
            @*<li class="nav-item">
            <a class="nav-link active color_tap" id="cus-tab" data-toggle="tab" href="#cus" role="tab" aria-controls="Customer" aria-selected="true">Customer</a>
        </li>*@
            <li class="nav-item">
                <a class="nav-link color_tap" id="item-tab" data-toggle="tab" href="#item" role="tab" aria-controls="Items" aria-selected="false">Add Data</a>
            </li>
            <li class="nav-item">
                <a class="nav-link color_tap_cv" id="gim" style="cursor: pointer;">IM[ยืม]</a>
            </li>
        </ul>
        <div class="tab-content" id="myTabContent">

            <div class="tab-pane fade show active" id="item" role="tabpanel" aria-labelledby="item-tab" style="margin-top: 10px">
                <div class="row">
                    <div class="col-sm-6">
                        Search InventoryTransfer IM No. :
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <button class="input-group-text" id="Cifr"><i class="fa fa-check"></i></button>
                            </div>
                            <input type="text" id="txtDocEntry" disabled size="7" autocomplete="off" value="" />
                            <input type="text" class="form-control" placeholder="" id="txtDocNum" value="" autocomplete="off" disabled>
                            <div class="input-group-append">
                                <button class="input-group-text btnModelsItem" data-toggle="modal" data-target="#ModalInfIM"><i class="fa fa-search"></i></button>
                            </div>
                        </div>
                        Series : <input type="text" id="txtSeriesIM" readonly class="hiddenAdmin" />
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <button class="input-group-text" id="Cifr"><i class="fa fa-check"></i></button>
                            </div>
                            <input type="text" placeholder="" id="txtSeries" value="" autocomplete="off" disabled size="7">
                            <input type="text" class="form-control" placeholder="" id="txtSeriesName" value="" autocomplete="off" disabled>
                            <div class="input-group-append">
                                <button class="input-group-text btnModelsItem" data-toggle="modal" data-target="#ModalSeries"><i class="fa fa-search"></i></button>
                            </div>
                        </div>
                        Customer Code :
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <button class="input-group-text" id="CItemCode"><i class="fa fa-check"></i></button>
                            </div>
                            <input type="text" class="form-control" placeholder="" id="txtCardCode" readonly>
                            <div class="input-group-append">
                                @*<button class="input-group-text btnModelsItem" data-toggle="modal" data-target="#ModalCusCode"><i class="fa fa-search"></i></button>*@
                            </div>
                        </div>
                        Customer Name :
                        <div class="input-group">
                            <input type="text" class="form-control" id="txtCardName" readonly>
                        </div>

                        <div>
                            Posting Date :
                            <div class="input-group">
                                <input type="date" class="form-control" id="DocDate">
                            </div>
                        </div>
                        <div>
                            Document Date :
                            <div class="input-group">
                                <input type="date" class="form-control" id="DocumentDate">
                            </div>
                        </div>
                        <hr>
                    </div>

                    <div class="col-sm-6">
                        <div>
                            From Warehouse :
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <button class="input-group-text" id="COcrCode"><i class="fa fa-check"></i></button>
                                </div>
                                <input type="text" class="form-control" placeholder="" value="" id="FromWhsCode" disabled>
                                <!--<div class="input-group-append">
                                <button class="input-group-text btnModelsOcrCode" data-toggle="modal" data-target="#ModalWarehouse"><i class="fa fa-search"></i></button>-->
                                @*ModalFromWhsCode*@
                                <!--</div>-->
                            </div>
                        </div>
                        <!--<div>
                        From Bin Location :
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <button class="input-group-text" id="COcrCode2"><i class="fa fa-check"></i></button>
                            </div>
                            <input type="text" class="form-control" placeholder="" value="" id="FromBinCode">-->
                        @*<input type="text" class="form-control" placeholder="Search Code" value="C62" id="OcrCode2">*@
                        <!--<div class="input-group-append">
                        <button class="input-group-text btnModelsOcrCode2" data-toggle="modal" data-target="#ModalBinLocation"><i class="fa fa-search"></i></button>-->
                        @*ModalFromBinCode*@
                        <!--</div>
                            </div>
                        </div>-->
                        <div>
                            To Warehouse :
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <button class="input-group-text" id="COcrCode3"><i class="fa fa-check"></i></button>
                                </div>
                                <input type="text" class="form-control" placeholder="" id="ToWhsCode" value="" disabled>
                                <!--<div class="input-group-append">
                                <button class="input-group-text btnModelsOcrCode3" data-toggle="modal" data-target="#ModalWarehouse"><i class="fa fa-search"></i></button>-->
                                @*ModalToWhsCode*@
                                <!--</div>-->
                            </div>
                        </div>
                        <div class="hiddenAdmin">
                            To Bin Location :
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <button class="input-group-text" id="COcrCode4"><i class="fa fa-check"></i></button>
                                </div>
                                <input type="text" id="txtBinEntry" autocomplete="off" disabled size="7" />
                                <input type="text" class="form-control" placeholder="" id="ToBinCode" value="" disabled>
                                <div class="input-group-append">
                                    @*<button class="input-group-text btnModelsOcrCode4" id="btnToBinLocation" data-toggle="modal" data-target="#ModalToBinLocation"><i class="fa fa-search"></i></button>*@@*ModalToBinCode*@
                                </div>
                            </div>
                        </div>
                        <div>
                            Sale Employee :
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <button class="input-group-text" id="COcrCode4"><i class="fa fa-check"></i></button>
                                </div>
                                <input type="text" size="7" placeholder="" id="SlpCode0" value="" disabled>
                                <input type="text" class="form-control" placeholder="" id="SlpCode" value="" disabled>
                            </div>
                        </div>
                        @*<div>
                            Journal Remark :
                            <div class="input-group">
                                <input type="text" class="form-control" value="" id="jrnlMemo">
                            </div>
                        </div>*@
                        <div>
                            Remark :
                            <div class="input-group">
                                <input type="text" class="form-control" value="" id="comments">
                                <input type="text" class="form-control hiddenAdmin" value="" id="txtShipToCode">
                                <input type="text" class="form-control hiddenAdmin" value="" id="txtAddress">
                                @* hiddenAdmin *@
                            </div>
                        </div>
                        <div align="center">
                            <br>
                            <div><button class="btn btn-primary btn-lg btn-block" id="btnSeatch" onclick="fncLoadData()"> Search </button></div>
                            <div><button class="btn btn-danger btn-lg btn-block" id="btnClear"> Clear </button></div>
                            @*<div><button class="btn btn-warning btn-lg btn-block" id="btnGetDataLine" onclick="fncGetDataLine()">Get</button></div>*@
                        </div>
                    </div>
                </div>
            </div>

            <br>
            <div class="row" id="dataDocnum" style="display:none">
                <div class="col-sm-12">
                    <div class="table-responsive">
                        <div class="table-responsive" id="mainmdl">

                            <table id="TbDataLine" class="table table-striped table-bordered table-condensed dt-responsive nowrap text-xsmall" width="100%" cellspacing="0" style="background:#f0eff1;color:#696969;">
                                <thead>
                                    <tr>
                                        <th>LineNo</th>
                                        <th>ItemCode</th>
                                        <th>ItemName</th>
                                        <th>SAP-QTY</th>
                                        <th>Input-QTY</th>
                                        <th>Patient</th>
                                        <th>UomCode</th>
                                        <th>UomEntry</th>
                                        <th>FromWarehouse</th>
                                        <th>FromBinCode</th>
                                        <th>FromBinEntry</th>
                                        <th>ToWarehouse</th>
                                        <th>ToBinCode</th>
                                        <th>ToBinEntry</th>
                                        <th>BatchYN</th>
                                        <th>SerialYN</th>
                                        <th>Remark</th>
                                    </tr>
                                </thead>
                            </table>

                        </div>
                        <br />
                        <div class="col-sm-6">
                            <div class="hiddenAdmin">
                                ItemCode : <input type="text" id="txtItemCode" class="form-control" value="" style="background-color: cornsilk;" readonly />
                                ItemName : <input type="text" id="txtItemName" class="form-control" value="" style="background-color: cornsilk;" readonly />
                                Quantity : <input type="text" id="txtQuantity" class="form-control" value="" style="background-color: cornsilk;" readonly />
                                FromBinEntry : <input type="text" id="txtfBinEntry" class="form-control" value="" style="background-color: cornsilk;" readonly />
                                <hr>
                            </div>

                            @* =================== TabScanBarCode =================== *@
                            <div id="TabScanBarCode" class="BoxScan">
                                @* ================= ปิด ================= *@
                                <div id="tabTypeBarcode" style="display:none;">
                                    <center>
                                        <label>
                                            <input type="radio" id="rdoTypeScan" name="typeScan" value="01" style="height: 15px; width: 15px; vertical-align: middle;" onclick="checkBarcodeUDOM()" />
                                            <font size="3" style="font-weight:bold">Barcode UDOM</font>
                                        </label>
                                        &nbsp;&nbsp;&nbsp;
                                        <label>
                                            <input type="radio" id="rdoTypeScan" name="typeScan" value="02" style="height: 15px; width: 15px; vertical-align: middle; " onclick="checkBarcodeProduct()" />
                                            <font size="3" style="font-weight:bold">Barcode Product</font>
                                        </label>
                                    </center>
                                </div>
                                @* ================= ปิด ================= *@

                                <div id="divBarcodeUDOM" style="display:block; ">
                                    <div id="TabQty" style="display:block;">
                                        Input Quantity :
                                        <div class="input-group">
                                            <input type="number" class="form-control" placeholder="" id="txtQuantity01" value="1" style="background-color: antiquewhite; border: 3px solid #000000; margin: 0 auto; text-align: center; ">
                                            <button class="btn btn-warning" id="btnUpdateQty" style="margin-left:5px; display:none" onclick="fncUpdateQty();">Update Qty</button>
                                        </div>
                                    </div>
                                    <div>
                                        Scan Barcode :
                                        <div class="input-group">
                                            <input type="text" class="form-control" value="" id="txtScanBarCode01" style="background-color: antiquewhite; border: 3px solid #000000; margin: 0 auto; text-align: center;" autocomplete="off">
                                        </div>
                                        <button class="input-group-text" id="addRow01" style="display: none;" autocomplete="off"><i class="fa fa-plus"></i></button>
                                    </div>
                                </div>

                                @* ไม่ใช้ *@
                                <div id="divBarcodeProduct" style="display: none; ">

                                    <center>
                                        <label>
                                            <input type="radio" id="rdoTypeItem1" name="typeItem" value="Batch" style="height: 12px; width: 12px; vertical-align: middle;" onclick="chTypeItem()" />
                                            <font size="3" style="font-weight:bold">Batch</font>
                                        </label>
                                        &nbsp;&nbsp;&nbsp;
                                        <label>
                                            <input type="radio" id="rdoTypeItem2" name="typeItem" value="Serial" style="height: 12px; width: 12px; vertical-align: middle; " onclick="chTypeItem()" />
                                            <font size="3" style="font-weight:bold">Serial</font>
                                        </label><br>
                                    </center>
                                    <label>
                                        Input Quantity :
                                    </label>
                                    <div class="input-group">
                                        <input type="number" class="form-control" placeholder="" id="txtQuantity02" value="1" style="background-color: antiquewhite; border: 3px solid #000000; margin: 0 auto; text-align: center;" autocomplete="off" disabled>
                                    </div>

                                    <label>
                                        Scan Barcode :
                                    </label>
                                    <div class="input-group">
                                        <input type="text" class="form-control" value="" id="txtScanBarCode02" style="background-color: antiquewhite; border: 3px solid #000000; margin: 0 auto; text-align: center;" autocomplete="off" disabled>
                                    </div>

                                    <label>
                                        Scan Batch/Serial :
                                    </label><div class="input-group">
                                        <input type="text" class="form-control" value="" id="txtScanBatchSerial02" style="background-color: antiquewhite; border: 3px solid #000000; margin: 0 auto; text-align: center;" autocomplete="off" disabled>
                                    </div>
                                    <button class="input-group-text" id="addRow02" style="display:none;"><i class="fa fa-plus"></i></button>
                                </div>

                            </div>
                            @* ====================================================== *@
                        </div>
                        <hr>

                        <div><font size="+1" style="font-weight:bold"><u>List Data From Scan</u></font></div>
                        <div id="GetStcokBatchSerial01" class="hiddenAdmin">
                            <input type="text" id="getItemCode" />
                            <input type="text" id="getOnHand" />
                            <input type="text" id="getSerialNumber" />
                            <input type="text" id="getBatchNumber" />
                        </div>
                        <button id="btnDelRow" class="btn btn-info">&nbsp;Delete Row&nbsp;</button>
                        <table id="tbItemList" class="table table-striped table-bordered table-condensed dt-responsive nowrap text-xsmall" style="width: 100%; background: #f0eff1; color: #696969;">
                            <thead>
                                <tr>
                                    <th>&nbsp;</th>
                                    <th>ItemCode</th>
                                    <th>ItemName</th>
                                    <th>Quantity</th>
                                    <th>FromWhsCode</th>
                                    <th>FromBinCode</th>
                                    <th>FromBinEntry</th>
                                    <th>ToWhsCode</th>
                                    <th>ToBinEntry</th>
                                    <th>batchNumber</th>
                                    <th>serialNumber</th>
                                    @*<th>Remark</th>*@
                                </tr>
                            </thead>
                        </table>

                    </div>
                </div>

                <hr>
                <div class="row" style="padding: 15px;margin-top:-20px;margin-bottom:-20px;">
                    <div class="nav navbar-nav ml-auto">
                        <div class="btn-group">
                            <button class="btn btn-success" id="Save" style="margin-left:5px;" onclick="POSTDataAPI()">Send To SAP</button>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>

</div>


@*Create Models*@
@*0. Search Inventory Transfer IM *@
<div class="modal fade" id="ModalInfIM">
    <div class="modal-dialog modal-xl">
        <div class="modal-content" style="background:#f0eff1;color:#696969;">
            <div class="modal-header">
                <b>List of Inventory Transfer IM</b>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <div class="row">
                        <div class="col-sm-12">
                            <table id="TbInf" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0" style="background:#f0eff1;color:#696969;">
                                <thead>
                                    <tr>
                                        <th>DocNum</th>
                                        <th>Posting Date</th>
                                        <th>CardCode</th>
                                        <th>CardName</th>
                                        <th>slpCode</th>
                                        <th>slpName</th>
                                        <th>fromWhs</th>
                                        <th>toWhs</th>
                                        <th>DocEntry</th>
                                        <th>SeriesName</th>
                                        <th>ShipToCode</th>
                                        <th>Address</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-success" data-dismiss="modal" id="ChooseInf">Choose</button>
                <button class="btn btn-danger" data-dismiss="modal" id="CloseInf">Close</button>
            </div>
        </div>
    </div>
</div>

@*1. Search Customer Code*@
<div class="modal fade" id="ModalCusCode">
    <div class="modal-dialog modal-xl">
        <div class="modal-content" style="background:#f0eff1;color:#696969;">
            <div class="modal-header">
                <b>List of Customer</b>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <div class="row">
                        <div class="col-sm-12">
                            <table id="TbCusCode" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0" style="background:#f0eff1;color:#696969;">
                                <thead>
                                    <tr>
                                        <th>Customer Code</th>
                                        <th>Cusetomer Name</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal" id="ChooseCus" style="background:#f0eff1;color:#696969;">Choose</button>
                <button class="btn btn-info" data-dismiss="modal" style="background:#f0eff1;color:#696969;">Close</button>
            </div>
        </div>
    </div>
</div>

@*2. Search Warehouse*@
<div class="modal fade" id="ModalWarehouse">
    <div class="modal-dialog modal-xl">
        <div class="modal-content" style="background:#f0eff1;color:#696969;">
            <div class="modal-header">
                <b>List of Warehouse</b>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <div class="row">
                        <div class="col-sm-12">
                            <table id="TbCusCode" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0" style="background:#f0eff1;color:#696969;">
                                <thead>
                                    <tr>
                                        <th>WhsCode</th>
                                        <th>WhsName</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal" id="ChooseCus" style="background:#f0eff1;color:#696969;">Choose</button>
                <button class="btn btn-info" data-dismiss="modal" style="background:#f0eff1;color:#696969;">Close</button>
            </div>
        </div>
    </div>
</div>

@*3. Search Bin Location*@
<div class="modal fade" id="ModalBinLocation">
    <div class="modal-dialog modal-xl">
        <div class="modal-content" style="background:#f0eff1;color:#696969;">
            <div class="modal-header">
                <b>List of Bin Location</b>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <div class="row">
                        <div class="col-sm-12">
                            <table id="TbCusCode" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0" style="background:#f0eff1;color:#696969;">
                                <thead>
                                    <tr>
                                        <th>BinCode</th>
                                        <th>BinName</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal" id="ChooseCus" style="background:#f0eff1;color:#696969;">Choose</button>
                <button class="btn btn-info" data-dismiss="modal" style="background:#f0eff1;color:#696969;">Close</button>
            </div>
        </div>
    </div>
</div>

@*4. Search SaleEmployee*@
<div class="modal fade" id="ModalSaleEmployee">
    <div class="modal-dialog modal-xl">
        <div class="modal-content" style="background:#f0eff1;color:#696969;">
            <div class="modal-header">
                <b>List of Employee</b>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <div class="row">
                        <div class="col-sm-12">
                            <table id="TbCusCode" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0" style="background:#f0eff1;color:#696969;">
                                <thead>
                                    <tr>
                                        <th>SlpCode</th>
                                        <th>SlpName</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal" id="ChooseCus" style="background:#f0eff1;color:#696969;">Choose</button>
                <button class="btn btn-info" data-dismiss="modal" style="background:#f0eff1;color:#696969;">Close</button>
            </div>
        </div>
    </div>
</div>

@*5. Search Series CV*@
<div class="modal fade" id="ModalSeries">
    <div class="modal-dialog modal-xl">
        <div class="modal-content" style="background:#f0eff1;color:#696969;">
            <div class="modal-header">
                <b>List of Series</b>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <div class="row">
                        <div class="col-sm-12">
                            <table id="TbSeries" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0" style="background:#f0eff1;color:#696969;">
                                <thead>
                                    <tr>
                                        <th>Series</th>
                                        <th>SeriesName</th>
                                        <th>YYYY-MM</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal" id="ChooseSeries" style="background:#f0eff1;color:#696969;">Choose</button>
                <button class="btn btn-info" data-dismiss="modal" id="CloseSeries" style="background:#f0eff1;color:#696969;">Close</button>
            </div>
        </div>
    </div>
</div>

@*6. Search To Bin Location*@
<div class="modal fade" id="ModalToBinLocation">
    <div class="modal-dialog modal-xl">
        <div class="modal-content" style="background:#f0eff1;color:#696969;">
            <div class="modal-header">
                <b>List of Bin Location</b>
            </div>
            <div class="modal-body">
                <div class="table-responsive">
                    <div class="row">
                        <div class="col-sm-12">
                            <table id="TbToBinLocation" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0" style="background:#f0eff1;color:#696969;">
                                <thead>
                                    <tr>
                                        <th>BinCode</th>
                                        <th>BinName</th>
                                        <th>BinEntry</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-info" data-dismiss="modal" id="ChooseToBinLocation" style="background:#f0eff1;color:#696969;">Choose</button>
                <button class="btn btn-info" data-dismiss="modal" style="background:#f0eff1;color:#696969;">Close</button>
            </div>
        </div>
    </div>
</div>


<script src="~/js/Array.js"></script>
<script type="text/javascript">
    document.getElementById("frmLoading").style.display = "block";
    //+++++ GetInventoryTransferIMLine +++++
    var table0 = $('#TbInf').DataTable({
        "ajax": {
            "url": '@Url.Action("GetOWTR", "Inventory")',
            "type": "GET",
            "dataType": "JSON",
            "dataSrc": 'data',
            "complete": function (data) {
                console.log("GetOWTR Complete.");
            }
        },
        "columns": [
            { "data": "docNum" },
            { "data": "docDate" },
            { "data": "cardCode" },
            { "data": "cardName" },
            { "data": "slpCode" },
            { "data": "slpName" },
            { "data": "fromWhs" },
            { "data": "toWhs" },
            { "data": "docEntry" },
            { "data": "seriesName" },
            { "data": "shipToCode" },
            { "data": "address" }
        ],
        "pageLength": 7,
        "order": [[0, 'desc']],
        "select": true,
        "paging": true,
        "ordering": false,
        "info": false,
        "searching": true
    });

    table0.columns([4, 5, 6, 7, 8, 9]).visible(false, false);

    table0.on('select', function () {

        var celldocNum = table0.rows({ selected: true }).data()[0]['docNum'];
        var cellcardCode = table0.rows({ selected: true }).data()[0]['cardCode'];
        var cellcardName = table0.rows({ selected: true }).data()[0]['cardName'];
        var cellSlpCode = table0.rows({ selected: true }).data()[0]['slpCode']
        var cellSlp = table0.rows({ selected: true }).data()[0]['slpName'];
        var cellfromWhs = table0.rows({ selected: true }).data()[0]['fromWhs'];
        var celltoWhs = table0.rows({ selected: true }).data()[0]['toWhs'];
        var celldocEntry = table0.rows({ selected: true }).data()[0]['docEntry'];
        var cellseriesName = table0.rows({ selected: true }).data()[0]['seriesName'];
        var celltoBinEntry = table0.rows({ selected: true }).data()[0]['toBinEntry'];
        var celltoBinCode = table0.rows({ selected: true }).data()[0]['toBinCode'];
        var cellshipToCode = table0.rows({ selected: true }).data()[0]['shipToCode'];
        var celladdress = table0.rows({ selected: true }).data()[0]['address'];
        //console.log(rowData);

        $('#ChooseInf').click(function () {
            var txtDocNum = document.getElementById("txtDocNum");
            var txtCardCode = document.getElementById("txtCardCode");
            var txtCardName = document.getElementById("txtCardName");
            var txtSlpCode0 = document.getElementById("SlpCode0");
            var txtSlpCode = document.getElementById("SlpCode");
            var txtFromWhsCode = document.getElementById("FromWhsCode");
            var txtToWhsCode = document.getElementById("ToWhsCode");
            var txtDocEntry = document.getElementById("txtDocEntry");
            var txtSeriesIM = document.getElementById("txtSeriesIM");
            var txtToBinEntry = document.getElementById("txtBinEntry");
            var txtToBinCode = document.getElementById("ToBinCode");
            var txtShipToCode = document.getElementById("txtShipToCode");
            var txtAddress = document.getElementById("txtAddress");

            txtDocNum.value = celldocNum;
            txtCardCode.value = cellcardCode;
            txtCardName.value = cellcardName;
            txtSlpCode0.value = cellSlpCode;
            txtSlpCode.value = cellSlp;
            txtFromWhsCode.value = celltoWhs;
            txtToWhsCode.value = cellfromWhs;
            txtDocEntry.value = celldocEntry;
            txtSeriesIM.value = cellseriesName;
            txtToBinEntry.value = celltoBinEntry;
            txtToBinCode.value = celltoBinCode;
            txtShipToCode.value = cellshipToCode;
            txtAddress.value = celladdress;
        });
    });

    //+++++ Series CV +++++
    var tableSeriesCV = $('#TbSeries').DataTable({
            "ajax": {
            "url": '@Url.Action("GetSeriesCV", "Inventory")',
            "type": "GET",
            "dataType": "JSON",
            "dataSrc": 'data',
            "complete": function (data) {
                console.log("GetSeriesCV Complete.");
                jqueryXml = $(data);
                $('#txtSeries').val(jqueryXml[0].responseJSON.data[0].series);
                $('#txtSeriesName').val(jqueryXml[0].responseJSON.data[0].seriesName);
                document.getElementById("frmLoading").style.display = "none";
            }
        },
        "columns": [
            { "data": "series" },
            { "data": "seriesName" },
            { "data": "indicator" }
        ],
        "select": true,
        "paging": false,
        "ordering": false,
        "info": false,
        "searching": false
        });

    tableSeriesCV.on('select', function () {

        var cellSeries = tableSeriesCV.rows({ selected: true }).data()[0]['series'];
        var cellSeriesName = tableSeriesCV.rows({ selected: true }).data()[0]['seriesName'];
            $('#ChooseSeries').click(function () {
                var txtSeries = document.getElementById("txtSeries");
                var txtSeriesName = document.getElementById("txtSeriesName");
                txtSeries.value = cellSeries;
                txtSeriesName.value = cellSeriesName;
            });
        });

    var tline = $('#TbDataLine').DataTable();

    //============== fncLoadData ==============


    function ApplyDataTable(id) {
        $.noConflict();
        $.ajax({
            url: '@Url.Action("GetWTRLine", "Inventory")',
            data: { docentry: id },
            type: "GET",
            dataType: "JSON",
            "dataSrc": 'data',
            success: function (data) {
                tline = $('#TbDataLine').DataTable({
                    "bDestroy": true,
                    "aaData": data.data,
                    "autoWidth": true,
                    "responsive": true,
                    "lengthChange": true,
                    "ordering": true,
                    "columns": [
                        { "data": "lineNum", "autoWidth": true },
                        { "data": "itemCode", "autoWidth": true },
                        { "data": "dscription", "autoWidth": true },
                        { "data": "quantity", "autoWidth": true },
                        { "data": "inputQuantity", "autoWidth": true },
                        { "data": "patient", "autoWidth": true },
                        { "data": "uomCode", "autoWidth": true },
                        { "data": "uomEntry", "autoWidth": true },
                        { "data": "fromWhsCode", "autoWidth": true },
                        { "data": "fromBinCode", "autoWidth": true },
                        { "data": "fromBinEntry", "autoWidth": true },
                        { "data": "toWhsCode", "autoWidth": true },
                        { "data": "toBinCode", "autoWidth": true },
                        { "data": "toBinEntry", "autoWidth": true },
                        { "data": "batchYN", "autoWidth": true },
                        { "data": "serialYN", "autoWidth": true }
                        ,
                        {
                            render: function (data, type, full, meta) { return '<input type="text" id="mStatus' + meta.row + '" style="width:120px">'; }
                        }
                    ],
                    "language": { "emptyTable": "No Data" },
                    "order": [[0, 'desc']],
                    "select": false,
                    "paging": false,
                    "ordering": false,
                    "info": false,
                    "searching": false
                });

                tline.columns([5, 7, 8, 10, 11, 13]).visible(false, false);

                /*<input type="checkbox" !checked="checked" id = "chk' + full.itemCode + '" value = "'+ full.itemCode +'" onchange = "chkso(this)" >*/
                console.log("Download Data Complete");
                document.getElementById("frmLoading").style.display = "none";
                document.getElementById("dataDocnum").style.display = "block";
                document.getElementById("txtScanBarCode01").value = '';
                document.getElementById("txtScanBarCode01").focus();


            }
        });

    }



    function fncLoadData() {
        var docentry = $("#txtDocEntry").val();
        if (docentry != '') {
            document.getElementById("frmLoading").style.display = "block";
            ApplyDataTable(docentry);
        } else {
            alert("Please Select DocNum");
        }
    }

    function fncGetDataLine() {
        console.log(tline.data());
    }

    $('#btnClear').on('click', function () {
        location.reload();
    });

    //Add Data In Row
    var t = $('#tbItemList').DataTable({
        "columns": [
            {
                render: function (data, type, full, meta) { return '<button class="btn-sm btn-danger" onClick="removeRow(' + meta.row + ')"><i class="fas fa-trash-alt"></i></button>'; }
            },
            { "width": "10%" },
            { "width": "50%" },
            { "width": "5%" },
            { "width": "5%" },
            { "width": "5%" },
            { "width": "5%" },
            { "width": "5%" },
            { "width": "5%" },
            { "width": "5%" },
            { "width": "5%" }
        ],
        "select": true,
        "paging": false,
        "ordering": false,
        "info": false,
        "searching": false
    });
    //,
    //{
    //    render: function (data, type, full, meta) { return '<input type="text" id="mStatus' + meta.row + '" style="width:120px">'; }
    //}
    //Function Scan Item START
    //BarcodeUDOM
        $('#addRow01').on('click', function () {

            if ($('#txtScanBarCode01').val() != '') {

                var txtScanBarCode = document.getElementById("txtScanBarCode01").value;
                var txtWarehouse = document.getElementById("FromWhsCode").value;
                const strArr = txtScanBarCode.split(";");
                //document.getElementById("demo").innerHTML = StrBarCodeArr[4];
                var sItemCode = strArr[0];
                var sBatch = strArr[1];
                var sSerial = strArr[2];
                var sBatchSerial;
                var sToBinEntry;

                var sArr3 = strArr[3];
                var sQty;
                let lcase1 = sArr3.toLowerCase();
                let iQTY = lcase1.slice(0, 3);

                if (iQTY != "qty") {
                    sQty = document.getElementById("txtQuantity01").value;
                    sQty = parseFloat(sQty);
                } else if (iQTY == "qty") {
                    sQty = sArr3.substring(3, 9);
                    sQty = parseFloat(sQty);
                    if (isNaN(sQty)) {
                        sQty = document.getElementById("txtQuantity01").value;
                    } else {
                        sQty = sQty;
                    }
                }

                $('#txtScanBarCode01').val("");
                $('#txtScanBarCode01').focus();


                let jqueryXml = {};
                console.log(sItemCode + "-" + sBatch + "-" + sSerial + "-" + txtWarehouse);

                //function Get BinEntry
                sendBin(sItemCode)
                sToBinEntry = sBinEntry;
                //START Check ItemCode In Table Data
                //console.log("Data Line In Search.");
                //console.log(tline.data());
                var output = 0;
                for (let rr = 0; rr < tline.column(0).data().length; rr++) {
                    var data = tline.row(rr).data();
                    //console.log(data);
                    if (data.itemCode == sItemCode) {
                        output = output + 1;
                    }
                    else {
                        output = output + 0;
                    }
                }
                //console.log(output);
                //#### CHECK Item Not Found ? IF > 0 = True And IF = 0 False ####
                if (output > 0) {
                    //START = Check Type [Batch], [Serial] And [No Batch No Serial]
                    //BatchNum
                    if (sBatch != '') {
                        sBatchSerial = sBatch;
                        $.ajax({
                url: '@Url.Action("GetStockItemBatchW", "Inventory")',
                data: { itemcode: sItemCode, batchnumber: sBatchSerial, whscode: txtWarehouse},
                type: "GET",
                dataType: "JSON",
                "dataSrc": 'data',
                            success: function (data) {
                                console.log(data);
                                jqueryXml = $(data);
                                if (jqueryXml[0].data.length != 0) {
                                    //=========================
                                    var bItemCode = jqueryXml[0].data[0].itemCode;
                                    var bItemName = jqueryXml[0].data[0].itemName;
                                    var bQuantity = sQty;
                                    var bWhsCode = jqueryXml[0].data[0].whsCode;
                                    var bWhsEntry = jqueryXml[0].data[0].whsEntry;
                                    var bBinCode = jqueryXml[0].data[0].binCode;
                                    var bBinEntry = jqueryXml[0].data[0].binEntry;
                                    var bUOMCode = jqueryXml[0].data[0].uomCode;
                                    var bBatchNumber = jqueryXml[0].data[0].batchNumber;
                                    var bSerialNumber = jqueryXml[0].data[0].serialNumber;
                                    //if (bSerialNumber != '') { bSerialNumber = bSerialNumber } else { bSerialNumber = '' }
                                    var bExpDate = jqueryXml[0].data[0].expDate;
                                    if (bExpDate == '1899-12-30T00:00:00') {
                                        bExpDate = '';
                                    } else {
                                        bExpDate = bExpDate;
                                    }

                                    CheckQtyIsMore(bItemCode, bQuantity);

                                    //console.log(ok);
                                    if (chkQty == 'pass') {

                                        t.row.add([
                                            '',
                                            bItemCode,
                                            bItemName,
                                            bQuantity,
                                            $('#FromWhsCode').val(),
                                            bBinCode,
                                            bBinEntry,
                                            $('#ToWhsCode').val(),
                                            sToBinEntry,
                                            bBatchNumber,
                                            ''
                                        ]).draw(false);

                                    }
                                    $('#txtScanBarCode01').val("");
                                    $('#txtScanBarCode01').focus();
                                    //=========================
                                } else {
                                    alert("Batch Number does not exist.\r\nไม่มีเลข Batch ใน Warehouse นี้");
                                    $('#txtScanBarCode01').val("");
                                    $('#txtScanBarCode01').focus();
                                }

                            }
                        });
                    }
                    //SerialNum
                    else if (sSerial != '') {
                        if (sItemCode == 'DGC110' || sItemCode == 'GC18' || sItemCode == 'DGC120' || sItemCode == 'GC120' || sItemCode == 'DGC14' || sItemCode == 'GC14' || sItemCode == 'DGC110' || sItemCode == 'GC110' || sItemCode == 'C/Cmix-1.0' || sItemCode == 'C/Cmix-0.5' || sItemCode == 'OCAN-0.5A' || sItemCode == 'DGC18') {
                            if (sSerial.length >= 14) {
                                sBatchSerial = sSerial.substring(0, 12);
                            } else {
                                sBatchSerial = sSerial;
                            }
                            console.log(sBatchSerial);
                        }
                        else {
                            sBatchSerial = sSerial;
                        }

                        console.log(sItemCode + ";" + sBatchSerial + ";" + txtWarehouse);
                            $.ajax({
                                url: '@Url.Action("GetStockItemSerialW", "Inventory")',
                                data: { itemcode: sItemCode, serialnumber: sBatchSerial, whscode: txtWarehouse},
                                type: "GET",
                                dataType: "JSON",
                                "dataSrc": 'data',
                                success: function (data) {
                                    console.log(data);
                                    var jqueryXml = $(data);
                                    if (jqueryXml[0].data.length != 0) {
                                        //=========================
                                        var bItemCode = jqueryXml[0].data[0].itemCode;
                                        var bItemName = jqueryXml[0].data[0].itemName;
                                        var bQuantity = sQty;
                                        var bWhsCode = jqueryXml[0].data[0].whsCode;
                                        var bWhsEntry = jqueryXml[0].data[0].whsEntry;
                                        var bBinCode = jqueryXml[0].data[0].binCode;
                                        var bBinEntry = jqueryXml[0].data[0].binEntry;
                                        var bUOMCode = jqueryXml[0].data[0].uomCode;
                                        var bBatchNumber = jqueryXml[0].data[0].batchNumber;
                                        var bSerialNumber = jqueryXml[0].data[0].serialNumber;
                                        var bExpDate = jqueryXml[0].data[0].expDate;
                                        if (bExpDate == '1899-12-30T00:00:00') {
                                            bExpDate = '';
                                        } else {
                                            bExpDate = bExpDate;
                                        }

                                        CheckQtyIsMore(bItemCode, bQuantity);

                                        var sny = 0;
                                        for (let h = 0; h < t.column(0).data().length; h++) {
                                            var datasn = t.row(h).data();
                                            if (datasn[1] == bItemCode && datasn[9] == bSerialNumber) {
                                                sny = sny + 1;
                                            }
                                        }
                                        //console.log('duplicate' + sny);
                                        //console.log(ok);
                                        if (chkQty == 'pass' && sny == 0) {


                                            t.row.add([
                                                '',
                                                bItemCode,
                                                bItemName,
                                                bQuantity,
                                                $('#FromWhsCode').val(),
                                                bBinCode,
                                                bBinEntry,
                                                $('#ToWhsCode').val(),
                                                sToBinEntry,
                                                '',
                                                bSerialNumber
                                            ]).draw(false);

                                        }
                                        else if (chkQty == 'pass' && sny > 0) {
                                            alert("Serial Number Duplicate.\r\nเลข Serial ซ้ำ");
                                        }

                                        $('#txtScanBarCode01').val("");
                                        $('#txtScanBarCode01').focus();
                                        //=========================
                                    }
                                    else {
                                        alert("Serial Number does not exist.\r\nไม่มีเลข Serial ใน Warehouse นี้");
                                        $('#txtScanBarCode01').val("");
                                        $('#txtScanBarCode01').focus();
                                    }
                                }
                            });
                    }
                    //NoSerialNum And NoBatchNum
                    else if (sSerial == '' && sBatch == '') {
                         console.log('No Serial And No Batch But ItemCode : ' + sItemCode);
                        $.ajax({
                            url: '@Url.Action("GetItemByWhs", "Inventory")',
                            data: { itemcode: sItemCode, whscode: txtWarehouse},
                            type: "GET",
                            dataType: "JSON",
                            "dataSrc": 'data',
                            success: function (val) {
                                var jqueryXml = $(val);
                                //console.log(val);
                                if (jqueryXml[0].data.length != 0) {

                                    var bItemCode = jqueryXml[0].data[0].itemCode;
                                    var bItemName = jqueryXml[0].data[0].itemName;
                                    var bQuantity = sQty;
                                    var bWhsCode = jqueryXml[0].data[0].whsCode;
                                    var bWhsEntry = jqueryXml[0].data[0].whsEntry;
                                    var bBinCode = jqueryXml[0].data[0].binCode;
                                    var bBinEntry = jqueryXml[0].data[0].binEntry;
                                    var bUOMCode = jqueryXml[0].data[0].uomCode;
                                    var bBatchNumber = jqueryXml[0].data[0].batchNumber;
                                    var bSerialNumber = jqueryXml[0].data[0].serialNumber;
                                    var bExpDate = jqueryXml[0].data[0].expDate;
                                    if (bExpDate == '1899-12-30T00:00:00') {
                                        bExpDate = '';
                                    } else {
                                        bExpDate = bExpDate;
                                    }

                                    CheckQtyIsMore(bItemCode, bQuantity);

                                    if (chkQty == 'pass') {

                                        t.row.add([
                                            '',
                                            bItemCode,
                                            bItemName,
                                            bQuantity,
                                            $('#FromWhsCode').val(),
                                            bBinCode,
                                            bBinEntry,
                                            $('#ToWhsCode').val(),
                                            sToBinEntry,
                                            '',
                                            ''
                                        ]).draw(false);

                                    }


                                    //$('#txtScanBarCode01').val("");
                                    $('#txtScanBarCode01').focus();

                                }
                                else {
                                    alert("ไม่มี Item Barcode ใน Warehouse นี้");
                                    //$('#txtScanBarCode01').val("");
                                    $('#txtScanBarCode01').focus();
                                }

                            }

                        });
                    }
                    //END = Check Type [Batch], [Serial] And [No Batch No Serial]
                }

                else if (output == 0) {
                    alert('Item Not Found!');
                }
                //END Check ItemCode In Table Data

            }
        });

        $('#addRow01').click();

        var input01 = document.getElementById("txtScanBarCode01");
        input01.addEventListener("keyup", function (event) {
            if (event.keyCode === 13) {
                event.preventDefault();
                document.getElementById("addRow01").click();
            }
        });

    //Function Scan Item END

    //Delete Line Item From ScanBarCode
    $('#btnDelRow').click(function () {
        t.row('.selected').remove().draw(false);
    });

    function sendBin(itm) {
        for (let i = 0; i < tline.column(0).data().length; i++) {
            var data = tline.row(i).data();
            if (data.itemCode == itm) {
                sBinEntry = data.toBinEntry;
            }
            else if (data.itemCode == itm) {
                sBinEntry = data.toBinEntry;
            }
        }
        return sBinEntry;
    }

    function CheckQtyIsMore(itm, qty) {

        //console.warn('ItemCode : ' + itm + ' Qty : ' + qty);

        //==========================================
        //console.log('Tb : List Data From Scan');
        const sumh = 0;
        var cQty = 0;

        for (let h = 0; h < t.column(0).data().length; h++) {
            var datah = t.row(h).data();
            if (datah[1] == itm) {
                cQty = cQty + parseFloat(datah[3]);
            }
        }
        //console.log('SUM :> ' + cQty);
        //==========================================
        //console.log('Tb : List Data From SAP');
        for (let i = 0; i < tline.column(0).data().length; i++) {
            var data = tline.row(i).data();
            //console.log(data);

            var cQuantity1 = parseFloat(data.inputQuantity);
            var cQuantity2 = cQty;

            if (data.itemCode == itm && cQuantity1 <= cQuantity2) {
                chkQty = 'nopass';
                //console.warn('nopass');
                alert("Quantity Over [สแกนเกินจำนวน]");
            }
            else if (data.itemCode == itm && cQuantity1 > cQuantity2) {
                chkQty = 'pass';
                //console.log('pass');
            }


        }

        return chkQty;

    }

    function removeRow(rowno) {
        //alert('rowNo : ' + row);
        var data = t.row(rowno).data();
        ///console.log(data);
        var itemCode = data[1];
        var batchNum = data[9];
        var serialNum = data[10];
        let msg = "คุณต้องการลบ " + itemCode + ";" + batchNum + ";" + serialNum + ";";
        if (confirm(msg) == true) {
            console.log('OK -> Remove Row' + rowno);
            t.rows(rowno).remove().draw(false);
        }
        else {
            console.log('Cancel -> Remove Row' + rowno);
        }
    }


    //Add Data Head And Line -> SAP
    function POSTDataAPI() {
        //======================================
        document.getElementById("frmLoading").style.display = "block";
        var sHead = {};
        var sLine = [];
        var dLine = [];
        var serialLine = [];
        var batchLine = [];
        var arrayLine = {};
        //=================================================
        //===== Procressing 2 TB =====
        //Tb = List Data Line

        for (let ctbline = 0; ctbline < tline.column(0).data().length; ctbline++) {
            arrDataLine = {};
            var ldata = tline.row(ctbline).data();
            //console.log(ldata);
            var productType = "";

            if (ldata.batchYN == "Y") {
                productType = "b";
            } else {
                if (ldata.serialYN == "Y") {
                    productType = "s";
                }
            }

            if (ldata.batchYN == "N" && ldata.serialYN == "N") {
                productType = "n";
            }

            arrDataLine.baseLine = ldata.lineNum;
            arrDataLine.itemCode = ldata.itemCode;
            arrDataLine.quantity = parseFloat(ldata.quantity);
            arrDataLine.uomCode = ldata.uomCode;
            arrDataLine.uomEntry = ldata.uomEntry;
            arrDataLine.fromWhsCode = ldata.fromWhsCode;
            arrDataLine.fromBinEntry = ldata.fromBinEntry;
            arrDataLine.toWhsCode = ldata.toWhsCode;
            arrDataLine.toBinEntry = ldata.toBinEntry;
            arrDataLine.productType = productType;
            arrDataLine.batchYN = ldata.batchYN;
            arrDataLine.serialYN = ldata.serialYN;
            arrDataLine.patient = ldata.patient;
            arrDataLine.baseEntry = $('#txtDocEntry').val();
            arrDataLine.u_unitprice = ldata.u_unitprice;
            arrDataLine.qtyInSap = parseFloat(ldata.quantity);
            arrDataLine.totalQty = parseFloat(ldata.inputQuantity);
            arrDataLine.mStatus = $('#mStatus' + ctbline).val();

            dLine.push(arrDataLine);
        }
        //console.log("=== List Data Line ===");
        //console.log(dLine);


        //console.log("=== List Data Scan ===");
        //Tb = Data Line From Scan BarCode
        for (let rr = 0; rr < t.column(0).data().length; rr++) {

            arrayLine = {};
            var data = t.row(rr).data();
            var productType = "";
            var batchSerialNo = "";

            //console.log('Date pure....');
            //console.log(data);

            if (data[9] != "") {
                productType = "b";
                batchSerialNo = data[1] + ";" + data[9];
            } else {
                if (data[10] != "") {
                    productType = "s";
                    batchSerialNo = data[1] + ";" + data[10];
                }
            }

            if (data[9] == "" && data[10] == "") {
                productType = "n";
                batchSerialNo = 'non' + data[1];
            }

            arrayLine.itemCode = data[1];
            arrayLine.quantity = parseInt(data[3]);
            arrayLine.fromWhsCode = data[4];
            arrayLine.fromBinEntry = data[6];
            arrayLine.toWhsCode = data[7];
            arrayLine.toBinEntry = data[8];
            arrayLine.productType = productType;
            arrayLine.batchNo = data[9];
            arrayLine.serialNo = data[10];
            arrayLine.u_TranferNo = null;
            arrayLine.batchSerialNo = batchSerialNo;
            sLine.push(arrayLine);
        }
        //console.log(sLine);

        //console.log("Grouping...")
        //Group batchSerialNo
        const groupBy = sLine.reduce((acc, cur) => {
            acc[cur.batchSerialNo] ? acc[cur.batchSerialNo] = {
                ...acc[cur.batchSerialNo],
                quantity: acc[cur.batchSerialNo].quantity + cur.quantity
            } : acc[cur.batchSerialNo] = {
                ...cur
            };
            return acc;
        }, {});
        const output = Object.values(groupBy).map((item) => ({
            ...item
        }));
        //console.log(output);

        const data2 = dLine;
        //===========================================================
        arrDataLineB = {};
        arrDataLineS = {};
        arrDataLineM = {};
        arrDataHead = {};
        arrLineAll = [];

        //console.log("===== Pure Data =====");
        //console.log(data2);
        var cSerialNo
        var sumQTY = 0;
        for (let x = 0; x < data2.length; x++) {
            //arrDataHead = {};

            var serialbox = [];
            var batchbox = [];
            var xDocNum = null;
            xDocNum = $('#txtDocNum').val();
            for (let y = 0; y < output.length; y++) {
                //arrDataLineS = {};
                //console.log(output);
                //console.log(data2[x].itemCode + '==' + output[y].itemCode);
                if (data2[x].itemCode == output[y].itemCode) {
                    arrDataLineS = {};
                    arrDataLineB = {};

                    if (output[y].productType == 'b') {
                        arrDataLineB.itemCode = output[y].itemCode;
                        arrDataLineB.quantity = output[y].quantity;
                        arrDataLineB.batchNumber = output[y].batchNo;
                        batchbox.push(arrDataLineB);
                        serialbox = [];
                        sumQTY = sumQTY + output[y].quantity;
                    }


                    if (output[y].productType == 's') {
                        arrDataLineS.itemCode = output[y].itemCode;
                        arrDataLineS.quantity = output[y].quantity;
                        arrDataLineS.serialNumber = output[y].serialNo;
                        serialbox.push(arrDataLineS);
                        batchbox = [];
                        sumQTY = sumQTY + output[y].quantity;
                    }

                    if (output[y].productType == 'n') {
                        sumQTY = sumQTY + output[y].quantity;
                    }

                    //console.log(output[y].quantity + "->" + sumQTY);
                    arrDataHead.baseLine = data2[x].baseLine;
                    arrDataHead.itemCode = data2[x].itemCode;
                    arrDataHead.quantity = sumQTY;
                    arrDataHead.U_Patient = data2[x].patient;
                    arrDataHead.qtyInSap = data2[x].qtyInSap;
                    arrDataHead.totalQty = data2[x].totalQty;
                    arrDataHead.price = data2[x].u_unitprice;
                    arrDataHead.uomCode = data2[x].uomCode;
                    arrDataHead.uomEntry = data2[x].uomEntry;
                    arrDataHead.fromWhsCode = data2[x].fromWhsCode;
                    arrDataHead.toWhsCode = data2[x].toWhsCode;
                    arrDataHead.fromBinEntry = data2[x].fromBinEntry;
                    arrDataHead.toBinEntry = data2[x].toBinEntry;
                    arrDataHead.productType = data2[x].productType;
                    arrDataHead.U_TranferNo = xDocNum;
                    arrDataHead.mStatus = data2[x].mStatus;
                    arrDataHead.baseEntry = data2[x].baseEntry;
                    arrDataHead.batchLine = batchbox;
                    arrDataHead.serialLine = serialbox;


                }
                else {
                    arrDataHead = {};

                    arrDataHead.baseLine = data2[x].baseLine;
                    arrDataHead.itemCode = data2[x].itemCode;
                    arrDataHead.quantity = sumQTY;
                    arrDataHead.U_Patient = data2[x].patient;
                    arrDataHead.qtyInSap = data2[x].qtyInSap;
                    arrDataHead.totalQty = data2[x].totalQty;
                    arrDataHead.price = data2[x].u_unitprice;
                    arrDataHead.uomCode = data2[x].uomCode;
                    arrDataHead.uomEntry = data2[x].uomEntry;
                    arrDataHead.fromWhsCode = data2[x].fromWhsCode;
                    arrDataHead.toWhsCode = data2[x].toWhsCode;
                    arrDataHead.fromBinEntry = data2[x].fromBinEntry;
                    arrDataHead.toBinEntry = data2[x].toBinEntry;
                    arrDataHead.productType = data2[x].productType;
                    arrDataHead.U_TranferNo = xDocNum;
                    arrDataHead.mStatus = data2[x].mStatus;
                    arrDataHead.baseEntry = data2[x].baseEntry;
                    arrDataHead.batchLine = batchbox;
                    arrDataHead.serialLine = serialbox;
                }
            }
            console.log(arrDataHead);
            arrLineAll.push(arrDataHead);

            sumQTY = 0;
            arrDataHead = {};


        }
        //===========================================================

        var newLine = [];
        //Head
        sHead.series = $('#txtSeries').val();
        sHead.cardCode = $('#txtCardCode').val();
        sHead.docDate = $('#DocDate').val();
        sHead.taxDate = $('#DocumentDate').val();
        sHead.fromWhsCode = $('#FromWhsCode').val();
        sHead.toWhsCode = $('#ToWhsCode').val();
        sHead.toBinCode = $('#ToBinCode').val();
        sHead.toBinEntry = $('#txtBinEntry').val();
        sHead.salesEmployeeCode = $('#SlpCode0').val();
        sHead.comments = $('#comments').val();
        sHead.journalRemark = $('#jrnlMemo').val();
        sHead.u_loannum = $('#txtDocNum').val();
        sHead.shipToCode = $('#txtShipToCode').val();
        sHead.address = $('#txtAddress').val();
        sHead.line = arrLineAll;
        console.log(sHead);

        //sendUserPassSAP
            //get cookie
            let user = getCookie("username");
            let passer = getCookie("passw0rder");
            var dataU = {};
            dataU.userNameSAP = user;
            dataU.password = passer;

            //console.log("-> User And Password Sending...");
            //console.log(dataU);
            $.ajax({
                type: "POST",
                url: '@Url.Action("PostUserConfig", "Setting")',
                data: { send: dataU},
                dataType: "JSON",
                error: function (request, error) {

                },
                success: function (ex) {
                console.log("Success PostUserConfig");
            }
        });

        console.log("-> To Saving...");
        //======================================
        $.ajax({
            type: "POST",
            url: '@Url.Action("PostInventoryTransferCV", "Inventory")',
            data: { sendInventoryTransfer: sHead},
            dataType: "JSON",
            error: function (request, error) {
                    console.log(arguments);
                    alert(" Can't do because: " + error);
            },
            success: function (ex) {
                //console.log(ex);
                if (ex.errorCode == 0) {
                    alert("Success");
                    document.getElementById("Save").style.display = 'none';
                    document.getElementById("frmLoading").style.display = "none";

                    setTimeout(() => {
                        document.location.reload();
                    }, 1500);


                } else {
                    console.log(ex.errorMsg);
                    alert(ex.errorMsg);
                    document.getElementById("Save").style.display = 'block';
                    document.getElementById("frmLoading").style.display = "none";
                }
            }
        });
        //======================================
    }

    function getCookie(cname) {
        let name = cname + "=";
        let ca = document.cookie.split(';');
        for (let i = 0; i < ca.length; i++) {
            let c = ca[i];
            while (c.charAt(0) == ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) == 0) {
                return c.substring(name.length, c.length);
            }
        }
        return "";
    }

    $('#gim').click(function () {
        window.location.href = "@Url.Action("CreateInventoryTransferBB", "Inventory")";
    });
</script>

